{
    "openapi": "3.0.0",
    "info": {
        "title": "Vectorize API (Beta)",
        "version": "0.0.1",
        "description": "API for Vectorize services",
        "contact": {
            "name": "Vectorize",
            "url": "https://vectorize.io"
        }
    },
    "servers": [
        {
            "url": "https://api.vectorize.io/v1",
            "description": "Vectorize API"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "CreatePipelineResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id"
                        ]
                    }
                },
                "required": [
                    "message",
                    "data"
                ]
            },
            "SourceConnectorType": {
                "type": "string",
                "enum": [
                    "AWS_S3",
                    "AZURE_BLOB",
                    "CONFLUENCE",
                    "DISCORD",
                    "DROPBOX",
                    "DROPBOX_OAUTH",
                    "DROPBOX_OAUTH_MULTI",
                    "DROPBOX_OAUTH_MULTI_CUSTOM",
                    "GOOGLE_DRIVE_OAUTH",
                    "GOOGLE_DRIVE",
                    "GOOGLE_DRIVE_OAUTH_MULTI",
                    "GOOGLE_DRIVE_OAUTH_MULTI_CUSTOM",
                    "FIRECRAWL",
                    "GCS",
                    "INTERCOM",
                    "NOTION",
                    "NOTION_OAUTH_MULTI",
                    "NOTION_OAUTH_MULTI_CUSTOM",
                    "ONE_DRIVE",
                    "SHAREPOINT",
                    "WEB_CRAWLER",
                    "FILE_UPLOAD",
                    "GITHUB",
                    "FIREFLIES"
                ]
            },
            "SourceConnectorSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/SourceConnectorType"
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "id",
                    "type",
                    "config"
                ],
                "additionalProperties": false
            },
            "DestinationConnectorType": {
                "type": "string",
                "enum": [
                    "CAPELLA",
                    "DATASTAX",
                    "ELASTIC",
                    "PINECONE",
                    "SINGLESTORE",
                    "MILVUS",
                    "POSTGRESQL",
                    "QDRANT",
                    "SUPABASE",
                    "WEAVIATE",
                    "AZUREAISEARCH",
                    "TURBOPUFFER"
                ]
            },
            "DestinationConnectorSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/DestinationConnectorType"
                    },
                    "config": {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "id",
                    "type"
                ],
                "additionalProperties": false
            },
            "AIPlatformType": {
                "type": "string",
                "enum": [
                    "BEDROCK",
                    "VERTEX",
                    "OPENAI",
                    "VOYAGE"
                ]
            },
            "AIPlatformConfigSchema": {
                "type": "object",
                "properties": {
                    "embeddingModel": {
                        "type": "string",
                        "enum": [
                            "VECTORIZE_OPEN_AI_TEXT_EMBEDDING_2",
                            "VECTORIZE_OPEN_AI_TEXT_EMBEDDING_3_LARGE",
                            "VECTORIZE_OPEN_AI_TEXT_EMBEDDING_3_SMALL",
                            "VECTORIZE_VOYAGE_AI_2",
                            "VECTORIZE_VOYAGE_AI_3",
                            "VECTORIZE_VOYAGE_AI_3_LITE",
                            "VECTORIZE_VOYAGE_AI_3_LARGE",
                            "VECTORIZE_VOYAGE_AI_FINANCE_2",
                            "VECTORIZE_VOYAGE_AI_MULTILINGUAL_2",
                            "VECTORIZE_VOYAGE_AI_LAW_2",
                            "VECTORIZE_VOYAGE_AI_CODE_2",
                            "VECTORIZE_TITAN_TEXT_EMBEDDING_2",
                            "VECTORIZE_TITAN_TEXT_EMBEDDING_1",
                            "OPEN_AI_TEXT_EMBEDDING_2",
                            "OPEN_AI_TEXT_EMBEDDING_3_SMALL",
                            "OPEN_AI_TEXT_EMBEDDING_3_LARGE",
                            "VOYAGE_AI_2",
                            "VOYAGE_AI_3",
                            "VOYAGE_AI_3_LITE",
                            "VOYAGE_AI_3_LARGE",
                            "VOYAGE_AI_FINANCE_2",
                            "VOYAGE_AI_MULTILINGUAL_2",
                            "VOYAGE_AI_LAW_2",
                            "VOYAGE_AI_CODE_2",
                            "TITAN_TEXT_EMBEDDING_1",
                            "TITAN_TEXT_EMBEDDING_2",
                            "VERTEX_TEXT_EMBEDDING_4",
                            "VERTEX_TEXT_EMBEDDING_GECKO_3",
                            "VERTEX_GECKO_MULTILINGUAL_1",
                            "VERTEX_MULTILINGUAL_EMBEDDING_2"
                        ]
                    },
                    "chunkingStrategy": {
                        "type": "string",
                        "enum": [
                            "FIXED",
                            "SENTENCE",
                            "PARAGRAPH",
                            "MARKDOWN"
                        ]
                    },
                    "chunkSize": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "chunkOverlap": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "dimensions": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "extractionStrategy": {
                        "type": "string",
                        "enum": [
                            "FAST",
                            "IRIS",
                            "MIXED"
                        ]
                    }
                },
                "additionalProperties": false
            },
            "AIPlatformSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AIPlatformType"
                    },
                    "config": {
                        "$ref": "#/components/schemas/AIPlatformConfigSchema"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "config"
                ],
                "additionalProperties": false
            },
            "ScheduleSchemaType": {
                "type": "string",
                "enum": [
                    "manual",
                    "realtime",
                    "custom"
                ]
            },
            "ScheduleSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ScheduleSchemaType"
                    }
                },
                "required": [
                    "type"
                ]
            },
            "PipelineConfigurationSchema": {
                "type": "object",
                "properties": {
                    "sourceConnectors": {
                        "$ref": "#/components/schemas/PipelineSourceConnectorRequest"
                    },
                    "destinationConnector": {
                        "$ref": "#/components/schemas/PipelineDestinationConnectorRequest"
                    },
                    "aiPlatform": {
                        "$ref": "#/components/schemas/PipelineAIPlatformRequest"
                    },
                    "pipelineName": {
                        "type": "string",
                        "minLength": 1
                    },
                    "schedule": {
                        "$ref": "#/components/schemas/ScheduleSchema"
                    }
                },
                "required": [
                    "sourceConnectors",
                    "destinationConnector",
                    "aiPlatform",
                    "pipelineName",
                    "schedule"
                ],
                "additionalProperties": false
            },
            "PipelineListSummary": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "documentCount": {
                        "type": "number"
                    },
                    "sourceConnectorAuthIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationConnectorAuthIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "aiPlatformAuthIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceConnectorTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationConnectorTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "aiPlatformTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "configDoc": {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "documentCount",
                    "sourceConnectorAuthIds",
                    "destinationConnectorAuthIds",
                    "aiPlatformAuthIds",
                    "sourceConnectorTypes",
                    "destinationConnectorTypes",
                    "aiPlatformTypes",
                    "createdAt",
                    "createdBy"
                ]
            },
            "GetPipelinesResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineListSummary"
                        }
                    }
                },
                "required": [
                    "message",
                    "data"
                ]
            },
            "SourceConnector": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "configDoc": {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "string"
                    },
                    "lastUpdatedById": {
                        "type": "string"
                    },
                    "createdByEmail": {
                        "type": "string"
                    },
                    "lastUpdatedByEmail": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "verificationStatus": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "name"
                ]
            },
            "DestinationConnector": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "configDoc": {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "string"
                    },
                    "lastUpdatedById": {
                        "type": "string"
                    },
                    "createdByEmail": {
                        "type": "string"
                    },
                    "lastUpdatedByEmail": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "verificationStatus": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "name"
                ]
            },
            "AIPlatform": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "configDoc": {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdById": {
                        "type": "string"
                    },
                    "lastUpdatedById": {
                        "type": "string"
                    },
                    "createdByEmail": {
                        "type": "string"
                    },
                    "lastUpdatedByEmail": {
                        "type": "string"
                    },
                    "errorMessage": {
                        "type": "string"
                    },
                    "verificationStatus": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "type",
                    "name"
                ]
            },
            "PipelineSummary": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "documentCount": {
                        "type": "number"
                    },
                    "sourceConnectorAuthIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationConnectorAuthIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "aiPlatformAuthIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sourceConnectorTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "destinationConnectorTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "aiPlatformTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "createdAt": {
                        "type": "string",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "configDoc": {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        }
                    },
                    "sourceConnectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SourceConnector"
                        }
                    },
                    "destinationConnectors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DestinationConnector"
                        }
                    },
                    "aiPlatforms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AIPlatform"
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "documentCount",
                    "sourceConnectorAuthIds",
                    "destinationConnectorAuthIds",
                    "aiPlatformAuthIds",
                    "sourceConnectorTypes",
                    "destinationConnectorTypes",
                    "aiPlatformTypes",
                    "createdAt",
                    "createdBy",
                    "sourceConnectors",
                    "destinationConnectors",
                    "aiPlatforms"
                ]
            },
            "GetPipelineResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/PipelineSummary"
                    }
                },
                "required": [
                    "message",
                    "data"
                ]
            },
            "DeletePipelineResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "PipelineEvents": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "nullable": true
                    },
                    "details": {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        }
                    },
                    "summary": {
                        "type": "object",
                        "additionalProperties": {
                            "nullable": true
                        }
                    }
                },
                "required": [
                    "id",
                    "type",
                    "timestamp"
                ]
            },
            "GetPipelineEventsResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "nextToken": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineEvents"
                        }
                    }
                },
                "required": [
                    "message",
                    "data"
                ]
            },
            "PipelineMetrics": {
                "type": "object",
                "properties": {
                    "timestamp": {
                        "type": "string",
                        "nullable": true
                    },
                    "newObjects": {
                        "type": "number"
                    },
                    "changedObjects": {
                        "type": "number"
                    },
                    "deletedObjects": {
                        "type": "number"
                    }
                },
                "required": [
                    "timestamp",
                    "newObjects",
                    "changedObjects",
                    "deletedObjects"
                ]
            },
            "GetPipelineMetricsResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PipelineMetrics"
                        }
                    }
                },
                "required": [
                    "message",
                    "data"
                ]
            },
            "Document": {
                "type": "object",
                "properties": {
                    "relevancy": {
                        "type": "number"
                    },
                    "id": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "chunk_id": {
                        "type": "string"
                    },
                    "total_chunks": {
                        "type": "string"
                    },
                    "origin": {
                        "type": "string"
                    },
                    "origin_id": {
                        "type": "string"
                    },
                    "similarity": {
                        "type": "number"
                    },
                    "source": {
                        "type": "string"
                    },
                    "unique_source": {
                        "type": "string"
                    },
                    "source_display_name": {
                        "type": "string"
                    },
                    "pipeline_id": {
                        "type": "string"
                    },
                    "org_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "relevancy",
                    "id",
                    "text",
                    "chunk_id",
                    "total_chunks",
                    "origin",
                    "origin_id",
                    "similarity",
                    "source",
                    "unique_source",
                    "source_display_name"
                ],
                "additionalProperties": true
            },
            "RetrieveDocumentsResponse": {
                "type": "object",
                "properties": {
                    "question": {
                        "type": "string"
                    },
                    "documents": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Document"
                        }
                    },
                    "average_relevancy": {
                        "type": "number"
                    },
                    "ndcg": {
                        "type": "number"
                    }
                },
                "required": [
                    "question",
                    "documents",
                    "average_relevancy",
                    "ndcg"
                ]
            },
            "RetrieveContextMessage": {
                "type": "object",
                "properties": {
                    "role": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    }
                },
                "required": [
                    "role",
                    "content"
                ]
            },
            "RetrieveContext": {
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RetrieveContextMessage"
                        }
                    }
                },
                "required": [
                    "messages"
                ]
            },
            "AdvancedQuery": {
  "type": "object",
  "properties": {
    "mode": {
      "type": "string",
      "enum": ["text", "vector", "hybrid"],
      "description": "Search mode: 'text', 'vector', or 'hybrid'. Defaults to 'vector' if not specified."
    },
    "text-fields": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "description": "Fields to perform text search on."
    },
    "match-type": {
      "type": "string",
      "enum": ["match", "match_phrase", "multi_match"],
      "description": "Type of text match to perform."
    },
    "text-boost": {
      "type": "number",
      "format": "float",
      "description": "Multiplier for text search scores."
    },
    "filters": {
      "type": "object",
      "description": "Elasticsearch-compatible filter object."
    }
  },
  "description": "Advanced query parameters for enhanced search capabilities."
},
            "RetrieveDocumentsRequest": {
                "type": "object",
                "properties": {
                    "question": {
                        "type": "string"
                    },
                    "numResults": {
                        "type": "number",
                        "minimum": 1
                    },
                    "rerank": {
                        "type": "boolean",
                        "default": true
                    },
                    "metadata-filters": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "nullable": true
                            }
                        }
                    },
                    "context": {
                        "$ref": "#/components/schemas/RetrieveContext"
                    },
                "advanced-query": {
                    "$ref": "#/components/schemas/AdvancedQuery"
                }
            },
            "required": [
                "question",
                "numResults"
            ]
        },
        "StartPipelineResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "StopPipelineResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "StartDeepResearchResponse": {
            "type": "object",
            "properties": {
                "researchId": {
                    "type": "string"
                }
            },
            "required": [
                "researchId"
            ]
        },
        "N8NConfig": {
            "type": "object",
            "properties": {
                "account": {
                    "type": "string"
                },
                "webhookPath": {
                    "type": "string"
                },
                "headers": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "account",
                "webhookPath"
            ]
        },
        "StartDeepResearchRequest": {
            "type": "object",
            "properties": {
                "query": {
                    "type": "string"
                },
                "webSearch": {
                    "type": "boolean",
                    "default": false
                },
                "schema": {
                    "type": "string"
                },
                "n8n": {
                    "$ref": "#/components/schemas/N8NConfig"
                }
            },
            "required": [
                "query"
            ]
        },
        "DeepResearchResult": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "markdown": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                }
            },
            "required": [
                "success"
            ]
        },
        "GetDeepResearchResponse": {
            "type": "object",
            "properties": {
                "ready": {
                    "type": "boolean"
                },
                "data": {
                    "$ref": "#/components/schemas/DeepResearchResult"
                }
            },
            "required": [
                "ready"
            ]
        },
        "CreatedSourceConnector": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "id"
            ]
        },
        "CreateSourceConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "connectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/CreatedSourceConnector"
                    }
                }
            },
            "required": [
                "message",
                "connectors"
            ]
        },
        "CreateSourceConnector": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/components/schemas/SourceConnectorType"
                },
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "nullable": true
                    }
                }
            },
            "required": [
                "name",
                "type"
            ]
        },
        "CreateSourceConnectorRequest": {
            "type": "array",
            "minItems": 1,
            "items": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "Amazon S3",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "AWS_S3"
                                ],
                                "description": "Connector type (must be \"AWS_S3\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/AWS_S3Config"
                            }
                        },
                        "example": {
                            "name": "Amazon S3 Example",
                            "type": "AWS_S3",
                            "config": {
                                "access-key": "Enter Access Key",
                                "secret-key": "Enter Secret Key",
                                "bucket-name": "Enter your S3 Bucket Name",
                                "region": "Region Name",
                                "archiver": false,
                                "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                                "idle-time": 5,
                                "path-prefix": "example-path-prefix"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Azure Blob Storage",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "AZURE_BLOB"
                                ],
                                "description": "Connector type (must be \"AZURE_BLOB\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/AZURE_BLOBConfig"
                            }
                        },
                        "example": {
                            "name": "Azure Blob Storage Example",
                            "type": "AZURE_BLOB",
                            "config": {
                                "storage-account-name": "Enter Storage Account Name",
                                "storage-account-key": "Enter Storage Account Key",
                                "container": "Enter Container Name",
                                "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                                "idle-time": 5,
                                "path-prefix": "example-path-prefix"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Confluence",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "CONFLUENCE"
                                ],
                                "description": "Connector type (must be \"CONFLUENCE\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/CONFLUENCEConfig"
                            }
                        },
                        "example": {
                            "name": "Confluence Example",
                            "type": "CONFLUENCE",
                            "config": {
                                "username": "Enter your Confluence username",
                                "api-token": "Enter your Confluence API token",
                                "domain": "Enter your Confluence domain (e.g. my-domain.atlassian.net or confluence.<my-company>.com)",
                                "spaces": "Spaces to include (name, key or id)"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Discord",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DISCORD"
                                ],
                                "description": "Connector type (must be \"DISCORD\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/DISCORDConfig"
                            }
                        },
                        "example": {
                            "name": "Discord Example",
                            "type": "DISCORD",
                            "config": {
                                "server-id": "Enter Server ID",
                                "bot-token": "Enter Token",
                                "channel-ids": "Enter channel ID",
                                "limit": 10000,
                                "thread-message-inclusion": "ALL",
                                "filter-logic": "AND",
                                "thread-message-mode": "CONCATENATE"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Dropbox",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DROPBOX"
                                ],
                                "description": "Connector type (must be \"DROPBOX\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/DROPBOXConfig"
                            }
                        },
                        "example": {
                            "name": "Dropbox (Legacy) Example",
                            "type": "DROPBOX",
                            "config": {
                                "path-prefix": "Enter Path: /exampleFolder/subFolder"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Dropbox Oauth",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DROPBOX_OAUTH"
                                ],
                                "description": "Connector type (must be \"DROPBOX_OAUTH\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/DROPBOX_OAUTHAuthConfig"
                            }
                        },
                        "example": {
                            "name": "Dropbox OAuth Example",
                            "type": "DROPBOX_OAUTH",
                            "config": {}
                        }
                    },
                    {
                        "type": "object",
                        "title": "Dropbox Oauth Multi",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DROPBOX_OAUTH_MULTI"
                                ],
                                "description": "Connector type (must be \"DROPBOX_OAUTH_MULTI\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/DROPBOX_OAUTH_MULTIAuthConfig"
                            }
                        },
                        "example": {
                            "name": "Dropbox Multi-User (Vectorize) Example",
                            "type": "DROPBOX_OAUTH_MULTI",
                            "config": {}
                        }
                    },
                    {
                        "type": "object",
                        "title": "Dropbox Oauth Multi Custom",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DROPBOX_OAUTH_MULTI_CUSTOM"
                                ],
                                "description": "Connector type (must be \"DROPBOX_OAUTH_MULTI_CUSTOM\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/DROPBOX_OAUTH_MULTI_CUSTOMAuthConfig"
                            }
                        },
                        "example": {
                            "name": "Dropbox Multi-User (White Label) Example",
                            "type": "DROPBOX_OAUTH_MULTI_CUSTOM",
                            "config": {
                                "app-key": "Enter App Key",
                                "app-secret": "Enter App Secret"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Drive OAuth",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GOOGLE_DRIVE_OAUTH"
                                ],
                                "description": "Connector type (must be \"GOOGLE_DRIVE_OAUTH\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/GOOGLE_DRIVE_OAUTHConfig"
                            }
                        },
                        "example": {
                            "name": "Google Drive OAuth Example",
                            "type": "GOOGLE_DRIVE_OAUTH",
                            "config": {
                                "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                                "idle-time": 5
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Drive",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GOOGLE_DRIVE"
                                ],
                                "description": "Connector type (must be \"GOOGLE_DRIVE\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/GOOGLE_DRIVEConfig"
                            }
                        },
                        "example": {
                            "name": "Google Drive (Service Account) Example",
                            "type": "GOOGLE_DRIVE",
                            "config": {
                                "service-account-json": "Enter the JSON key file for the service account",
                                "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                                "idle-time": 5
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Drive Oauth Multi",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GOOGLE_DRIVE_OAUTH_MULTI"
                                ],
                                "description": "Connector type (must be \"GOOGLE_DRIVE_OAUTH_MULTI\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/GOOGLE_DRIVE_OAUTH_MULTIConfig"
                            }
                        },
                        "example": {
                            "name": "Google Drive Multi-User (Vectorize) Example",
                            "type": "GOOGLE_DRIVE_OAUTH_MULTI",
                            "config": {
                                "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                                "idle-time": 5
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Drive Oauth Multi Custom",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GOOGLE_DRIVE_OAUTH_MULTI_CUSTOM"
                                ],
                                "description": "Connector type (must be \"GOOGLE_DRIVE_OAUTH_MULTI_CUSTOM\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/GOOGLE_DRIVE_OAUTH_MULTI_CUSTOMConfig"
                            }
                        },
                        "example": {
                            "name": "Google Drive Multi-User (White Label) Example",
                            "type": "GOOGLE_DRIVE_OAUTH_MULTI_CUSTOM",
                            "config": {
                                "oauth2-client-id": "Enter Client Id",
                                "oauth2-client-secret": "Enter Client Secret",
                                "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                                "idle-time": 5
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Firecrawl",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "FIRECRAWL"
                                ],
                                "description": "Connector type (must be \"FIRECRAWL\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/FIRECRAWLConfig"
                            }
                        },
                        "example": {
                            "name": "Firecrawl Example",
                            "type": "FIRECRAWL",
                            "config": {
                                "api-key": "Enter your Firecrawl API Key",
                                "endpoint": "Crawl",
                                "request": "{ \n  \"url\": \"https://docs.vectorize.io/\",\n  \"maxDepth\": 25,\n  \"limit\": 100\n    }"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Cloud Storage",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GCS"
                                ],
                                "description": "Connector type (must be \"GCS\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/GCSConfig"
                            }
                        },
                        "example": {
                            "name": "GCP Cloud Storage Example",
                            "type": "GCS",
                            "config": {
                                "service-account-json": "Enter the JSON key file for the service account",
                                "bucket-name": "Enter bucket name",
                                "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                                "idle-time": 5,
                                "path-prefix": "example-path-prefix"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Intercom",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "INTERCOM"
                                ],
                                "description": "Connector type (must be \"INTERCOM\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/INTERCOMConfig"
                            }
                        },
                        "example": {
                            "name": "Intercom Example",
                            "type": "INTERCOM",
                            "config": {
                                "created_at": "2025-06-12",
                                "state": "all"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Notion",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "NOTION"
                                ],
                                "description": "Connector type (must be \"NOTION\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/NOTIONConfig"
                            }
                        },
                        "example": {
                            "name": "Notion Example",
                            "type": "NOTION",
                            "config": {
                                "select-resources": "example-select-resources"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Notion Oauth Multi",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "NOTION_OAUTH_MULTI"
                                ],
                                "description": "Connector type (must be \"NOTION_OAUTH_MULTI\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/NOTION_OAUTH_MULTIAuthConfig"
                            }
                        },
                        "example": {
                            "name": "Notion Multi-User (Vectorize) Example",
                            "type": "NOTION_OAUTH_MULTI",
                            "config": {}
                        }
                    },
                    {
                        "type": "object",
                        "title": "Notion Oauth Multi Custom",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "NOTION_OAUTH_MULTI_CUSTOM"
                                ],
                                "description": "Connector type (must be \"NOTION_OAUTH_MULTI_CUSTOM\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/NOTION_OAUTH_MULTI_CUSTOMAuthConfig"
                            }
                        },
                        "example": {
                            "name": "Notion Multi-User (White Label) Example",
                            "type": "NOTION_OAUTH_MULTI_CUSTOM",
                            "config": {
                                "client-id": "Enter Client ID",
                                "client-secret": "Enter Client Secret"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "OneDrive",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "ONE_DRIVE"
                                ],
                                "description": "Connector type (must be \"ONE_DRIVE\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/ONE_DRIVEConfig"
                            }
                        },
                        "example": {
                            "name": "OneDrive Example",
                            "type": "ONE_DRIVE",
                            "config": {
                                "ms-client-id": "Enter Client Id",
                                "ms-tenant-id": "Enter Tenant Id",
                                "ms-client-secret": "Enter Client Secret",
                                "users": "Enter users emails to import files from. Example: developer@vectorize.io",
                                "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                                "path-prefix": "Enter Folder path: /exampleFolder/subFolder"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Sharepoint",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "SHAREPOINT"
                                ],
                                "description": "Connector type (must be \"SHAREPOINT\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/SHAREPOINTConfig"
                            }
                        },
                        "example": {
                            "name": "SharePoint Example",
                            "type": "SHAREPOINT",
                            "config": {
                                "ms-client-id": "Enter Client Id",
                                "ms-tenant-id": "Enter Tenant Id",
                                "ms-client-secret": "Enter Client Secret",
                                "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,json,csv,jpg,jpeg,png,webp,svg,gif"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Web Crawler",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "WEB_CRAWLER"
                                ],
                                "description": "Connector type (must be \"WEB_CRAWLER\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/WEB_CRAWLERConfig"
                            }
                        },
                        "example": {
                            "name": "Web Crawler Example",
                            "type": "WEB_CRAWLER",
                            "config": {
                                "seed-urls": "(e.g. https://example.com)",
                                "min-time-between-requests": 500,
                                "max-error-count": 5,
                                "max-urls": 1000,
                                "max-depth": 50,
                                "reindex-interval-seconds": 3600
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "File Upload",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "FILE_UPLOAD"
                                ],
                                "description": "Connector type (must be \"FILE_UPLOAD\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/FILE_UPLOADAuthConfig"
                            }
                        },
                        "example": {
                            "name": "File Upload Example",
                            "type": "FILE_UPLOAD",
                            "config": {}
                        }
                    },
                    {
                        "type": "object",
                        "title": "Github",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GITHUB"
                                ],
                                "description": "Connector type (must be \"GITHUB\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/GITHUBConfig"
                            }
                        },
                        "example": {
                            "name": "GitHub Example",
                            "type": "GITHUB",
                            "config": {
                                "oauth-token": "Enter your GitHub personal access token",
                                "repositories": "Example: owner1/repo1",
                                "include-pull-requests": true,
                                "pull-request-status": "all",
                                "include-issues": true,
                                "issue-status": "all",
                                "max-items": 1000
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Fireflies",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "FIREFLIES"
                                ],
                                "description": "Connector type (must be \"FIREFLIES\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/FIREFLIESConfig"
                            }
                        },
                        "example": {
                            "name": "Fireflies.ai Example",
                            "type": "FIREFLIES",
                            "config": {
                                "api-key": "Enter your Fireflies.ai API key",
                                "start-date": "2025-06-12",
                                "max-meetings": -1
                            }
                        }
                    }
                ]
            }
        },
        "UpdateSourceConnectorResponseData": {
            "type": "object",
            "properties": {
                "updatedConnector": {
                    "$ref": "#/components/schemas/SourceConnector"
                },
                "pipelineIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "updatedConnector"
            ]
        },
        "UpdateSourceConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/components/schemas/UpdateSourceConnectorResponseData"
                }
            },
            "required": [
                "message",
                "data"
            ]
        },
        "UpdateSourceConnectorRequest": {
            "oneOf": [
                {
                    "type": "object",
                    "title": "Amazon S3",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/AWS_S3Config"
                        }
                    },
                    "example": {
                        "config": {
                            "access-key": "Enter Access Key",
                            "secret-key": "Enter Secret Key",
                            "bucket-name": "Enter your S3 Bucket Name",
                            "region": "Region Name",
                            "archiver": false,
                            "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                            "idle-time": 5,
                            "path-prefix": "example-path-prefix"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Azure Blob Storage",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/AZURE_BLOBConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "storage-account-name": "Enter Storage Account Name",
                            "storage-account-key": "Enter Storage Account Key",
                            "container": "Enter Container Name",
                            "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                            "idle-time": 5,
                            "path-prefix": "example-path-prefix"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Confluence",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/CONFLUENCEConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "username": "Enter your Confluence username",
                            "api-token": "Enter your Confluence API token",
                            "domain": "Enter your Confluence domain (e.g. my-domain.atlassian.net or confluence.<my-company>.com)",
                            "spaces": "Spaces to include (name, key or id)"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Discord",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/DISCORDConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "server-id": "Enter Server ID",
                            "bot-token": "Enter Token",
                            "channel-ids": "Enter channel ID",
                            "limit": 10000,
                            "thread-message-inclusion": "ALL",
                            "filter-logic": "AND",
                            "thread-message-mode": "CONCATENATE"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Dropbox",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/DROPBOXConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "path-prefix": "Enter Path: /exampleFolder/subFolder"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Dropbox Oauth",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/DROPBOX_OAUTHAuthConfig"
                        }
                    },
                    "example": {
                        "config": {}
                    }
                },
                {
                    "type": "object",
                    "title": "Dropbox Oauth Multi",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/DROPBOX_OAUTH_MULTIAuthConfig"
                        }
                    },
                    "example": {
                        "config": {}
                    }
                },
                {
                    "type": "object",
                    "title": "Dropbox Oauth Multi Custom",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/DROPBOX_OAUTH_MULTI_CUSTOMAuthConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "app-key": "Enter App Key",
                            "app-secret": "Enter App Secret"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Google Drive OAuth",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/GOOGLE_DRIVE_OAUTHConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                            "idle-time": 5
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Google Drive",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/GOOGLE_DRIVEConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "service-account-json": "Enter the JSON key file for the service account",
                            "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                            "idle-time": 5
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Google Drive Oauth Multi",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/GOOGLE_DRIVE_OAUTH_MULTIConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                            "idle-time": 5
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Google Drive Oauth Multi Custom",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/GOOGLE_DRIVE_OAUTH_MULTI_CUSTOMConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "oauth2-client-id": "Enter Client Id",
                            "oauth2-client-secret": "Enter Client Secret",
                            "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                            "idle-time": 5
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Firecrawl",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/FIRECRAWLConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "api-key": "Enter your Firecrawl API Key",
                            "endpoint": "Crawl",
                            "request": "{ \n  \"url\": \"https://docs.vectorize.io/\",\n  \"maxDepth\": 25,\n  \"limit\": 100\n    }"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Google Cloud Storage",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/GCSConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "service-account-json": "Enter the JSON key file for the service account",
                            "bucket-name": "Enter bucket name",
                            "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                            "idle-time": 5,
                            "path-prefix": "example-path-prefix"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Intercom",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/INTERCOMConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "created_at": "2025-06-12",
                            "state": "all"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Notion",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/NOTIONConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "select-resources": "example-select-resources"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Notion Oauth Multi",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/NOTION_OAUTH_MULTIAuthConfig"
                        }
                    },
                    "example": {
                        "config": {}
                    }
                },
                {
                    "type": "object",
                    "title": "Notion Oauth Multi Custom",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/NOTION_OAUTH_MULTI_CUSTOMAuthConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "client-id": "Enter Client ID",
                            "client-secret": "Enter Client Secret"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "OneDrive",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/ONE_DRIVEConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "ms-client-id": "Enter Client Id",
                            "ms-tenant-id": "Enter Tenant Id",
                            "ms-client-secret": "Enter Client Secret",
                            "users": "Enter users emails to import files from. Example: developer@vectorize.io",
                            "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                            "path-prefix": "Enter Folder path: /exampleFolder/subFolder"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Sharepoint",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/SHAREPOINTConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "ms-client-id": "Enter Client Id",
                            "ms-tenant-id": "Enter Tenant Id",
                            "ms-client-secret": "Enter Client Secret",
                            "file-extensions": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,json,csv,jpg,jpeg,png,webp,svg,gif"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Web Crawler",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/WEB_CRAWLERConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "seed-urls": "(e.g. https://example.com)",
                            "min-time-between-requests": 500,
                            "max-error-count": 5,
                            "max-urls": 1000,
                            "max-depth": 50,
                            "reindex-interval-seconds": 3600
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "File Upload",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/FILE_UPLOADAuthConfig"
                        }
                    },
                    "example": {
                        "config": {}
                    }
                },
                {
                    "type": "object",
                    "title": "Github",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/GITHUBConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "oauth-token": "Enter your GitHub personal access token",
                            "repositories": "Example: owner1/repo1",
                            "include-pull-requests": true,
                            "pull-request-status": "all",
                            "include-issues": true,
                            "issue-status": "all",
                            "max-items": 1000
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Fireflies",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/FIREFLIESConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "api-key": "Enter your Fireflies.ai API key",
                            "start-date": "2025-06-12",
                            "max-meetings": -1
                        }
                    }
                }
            ]
        },
        "DeleteSourceConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "CreatedDestinationConnector": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "id"
            ]
        },
        "CreateDestinationConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "connectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/CreatedDestinationConnector"
                    }
                }
            },
            "required": [
                "message",
                "connectors"
            ]
        },
        "CreateDestinationConnector": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/components/schemas/DestinationConnectorType"
                },
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "nullable": true
                    }
                }
            },
            "required": [
                "name",
                "type"
            ]
        },
        "CreateDestinationConnectorRequest": {
            "type": "array",
            "minItems": 1,
            "items": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "Capella",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "CAPELLA"
                                ],
                                "description": "Connector type (must be \"CAPELLA\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/CAPELLAConfig"
                            }
                        },
                        "example": {
                            "name": "Couchbase Capella Example",
                            "type": "CAPELLA",
                            "config": {
                                "username": "Enter your cluster access name",
                                "password": "Enter your cluster access password",
                                "connection-string": "Enter your connection string",
                                "bucket": "Enter bucket name",
                                "scope": "Enter scope name",
                                "collection": "Enter collection name",
                                "index": "Enter search index name"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Datastax",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DATASTAX"
                                ],
                                "description": "Connector type (must be \"DATASTAX\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/DATASTAXConfig"
                            }
                        },
                        "example": {
                            "name": "DataStax Astra Example",
                            "type": "DATASTAX",
                            "config": {
                                "endpoint_secret": "Enter your API endpoint",
                                "token": "Enter your application token",
                                "collection": "Enter collection name"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Elastic",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "ELASTIC"
                                ],
                                "description": "Connector type (must be \"ELASTIC\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/ELASTICConfig"
                            }
                        },
                        "example": {
                            "name": "Elasticsearch Example",
                            "type": "ELASTIC",
                            "config": {
                                "host": "Enter your host",
                                "port": "Enter your port",
                                "api-key": "Enter your API key",
                                "index": "Enter index name"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Pinecone",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "PINECONE"
                                ],
                                "description": "Connector type (must be \"PINECONE\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/PINECONEConfig"
                            }
                        },
                        "example": {
                            "name": "Pinecone Example",
                            "type": "PINECONE",
                            "config": {
                                "api-key": "Enter your API Key",
                                "index": "Enter index name"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Singlestore",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "SINGLESTORE"
                                ],
                                "description": "Connector type (must be \"SINGLESTORE\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/SINGLESTOREConfig"
                            }
                        },
                        "example": {
                            "name": "SingleStore Example",
                            "type": "SINGLESTORE",
                            "config": {
                                "host": "Enter the host of the deployment",
                                "port": 100,
                                "database": "Enter the database name",
                                "username": "Enter the username",
                                "password": "Enter the username's password",
                                "table": "Enter table name"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Milvus",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "MILVUS"
                                ],
                                "description": "Connector type (must be \"MILVUS\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/MILVUSConfig"
                            }
                        },
                        "example": {
                            "name": "Milvus Example",
                            "type": "MILVUS",
                            "config": {
                                "url": "Enter your public endpoint for your Milvus cluster",
                                "collection": "Enter collection name"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Postgresql",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "POSTGRESQL"
                                ],
                                "description": "Connector type (must be \"POSTGRESQL\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/POSTGRESQLConfig"
                            }
                        },
                        "example": {
                            "name": "PostgreSQL Example",
                            "type": "POSTGRESQL",
                            "config": {
                                "host": "Enter the host of the deployment",
                                "port": 5432,
                                "database": "Enter the database name",
                                "username": "Enter the username",
                                "password": "Enter the username's password",
                                "table": "Enter <table name> or <schema>.<table name>"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Qdrant",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "QDRANT"
                                ],
                                "description": "Connector type (must be \"QDRANT\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/QDRANTConfig"
                            }
                        },
                        "example": {
                            "name": "Qdrant Example",
                            "type": "QDRANT",
                            "config": {
                                "host": "Enter your host",
                                "api-key": "Enter your API key",
                                "collection": "Enter collection name"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Supabase",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "SUPABASE"
                                ],
                                "description": "Connector type (must be \"SUPABASE\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/SUPABASEConfig"
                            }
                        },
                        "example": {
                            "name": "Supabase Example",
                            "type": "SUPABASE",
                            "config": {
                                "host": "aws-0-us-east-1.pooler.supabase.com",
                                "port": 5432,
                                "database": "Enter the database name",
                                "username": "Enter the username",
                                "password": "Enter the username's password",
                                "table": "Enter <table name> or <schema>.<table name>"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Weaviate",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "WEAVIATE"
                                ],
                                "description": "Connector type (must be \"WEAVIATE\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/WEAVIATEConfig"
                            }
                        },
                        "example": {
                            "name": "Weaviate Example",
                            "type": "WEAVIATE",
                            "config": {
                                "host": "Enter your Weaviate Cluster REST Endpoint",
                                "api-key": "Enter your API key",
                                "collection": "Enter collection name"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Azureaisearch",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "AZUREAISEARCH"
                                ],
                                "description": "Connector type (must be \"AZUREAISEARCH\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/AZUREAISEARCHConfig"
                            }
                        },
                        "example": {
                            "name": "Azure AI Search Example",
                            "type": "AZUREAISEARCH",
                            "config": {
                                "service-name": "Enter your Azure AI Search service name",
                                "api-key": "Enter your API key",
                                "index": "Enter index name"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Turbopuffer",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "TURBOPUFFER"
                                ],
                                "description": "Connector type (must be \"TURBOPUFFER\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/TURBOPUFFERConfig"
                            }
                        },
                        "example": {
                            "name": "Turbopuffer Example",
                            "type": "TURBOPUFFER",
                            "config": {
                                "api-key": "Enter your API key",
                                "namespace": "Enter namespace name"
                            }
                        }
                    }
                ]
            }
        },
        "UpdatedDestinationConnectorData": {
            "type": "object",
            "properties": {
                "updatedConnector": {
                    "$ref": "#/components/schemas/DestinationConnector"
                },
                "pipelineIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "updatedConnector"
            ]
        },
        "UpdateDestinationConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/components/schemas/UpdatedDestinationConnectorData"
                }
            },
            "required": [
                "message",
                "data"
            ]
        },
        "UpdateDestinationConnectorRequest": {
            "oneOf": [
                {
                    "type": "object",
                    "title": "Capella",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/CAPELLAConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "username": "Enter your cluster access name",
                            "password": "Enter your cluster access password",
                            "connection-string": "Enter your connection string",
                            "bucket": "Enter bucket name",
                            "scope": "Enter scope name",
                            "collection": "Enter collection name",
                            "index": "Enter search index name"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Datastax",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/DATASTAXConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "endpoint_secret": "Enter your API endpoint",
                            "token": "Enter your application token",
                            "collection": "Enter collection name"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Elastic",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/ELASTICConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "host": "Enter your host",
                            "port": "Enter your port",
                            "api-key": "Enter your API key",
                            "index": "Enter index name"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Pinecone",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/PINECONEConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "api-key": "Enter your API Key",
                            "index": "Enter index name"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Singlestore",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/SINGLESTOREConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "host": "Enter the host of the deployment",
                            "port": 100,
                            "database": "Enter the database name",
                            "username": "Enter the username",
                            "password": "Enter the username's password",
                            "table": "Enter table name"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Milvus",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/MILVUSConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "url": "Enter your public endpoint for your Milvus cluster",
                            "collection": "Enter collection name"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Postgresql",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/POSTGRESQLConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "host": "Enter the host of the deployment",
                            "port": 5432,
                            "database": "Enter the database name",
                            "username": "Enter the username",
                            "password": "Enter the username's password",
                            "table": "Enter <table name> or <schema>.<table name>"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Qdrant",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/QDRANTConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "host": "Enter your host",
                            "api-key": "Enter your API key",
                            "collection": "Enter collection name"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Supabase",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/SUPABASEConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "host": "aws-0-us-east-1.pooler.supabase.com",
                            "port": 5432,
                            "database": "Enter the database name",
                            "username": "Enter the username",
                            "password": "Enter the username's password",
                            "table": "Enter <table name> or <schema>.<table name>"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Weaviate",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/WEAVIATEConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "host": "Enter your Weaviate Cluster REST Endpoint",
                            "api-key": "Enter your API key",
                            "collection": "Enter collection name"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Azureaisearch",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/AZUREAISEARCHConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "service-name": "Enter your Azure AI Search service name",
                            "api-key": "Enter your API key",
                            "index": "Enter index name"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Turbopuffer",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/TURBOPUFFERConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "api-key": "Enter your API key",
                            "namespace": "Enter namespace name"
                        }
                    }
                }
            ]
        },
        "DeleteDestinationConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "CreatedAIPlatformConnector": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "id"
            ]
        },
        "CreateAIPlatformConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "connectors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/CreatedAIPlatformConnector"
                    }
                }
            },
            "required": [
                "message",
                "connectors"
            ]
        },
        "CreateAIPlatformConnector": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/components/schemas/AIPlatformType"
                },
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "nullable": true
                    }
                }
            },
            "required": [
                "name",
                "type"
            ]
        },
        "CreateAIPlatformConnectorRequest": {
            "type": "array",
            "minItems": 1,
            "items": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "Bedrock",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "BEDROCK"
                                ],
                                "description": "Connector type (must be \"BEDROCK\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/BEDROCKAuthConfig"
                            }
                        },
                        "example": {
                            "name": "Amazon Bedrock Example",
                            "type": "BEDROCK",
                            "config": {
                                "access-key": "Enter your Amazon Bedrock Access Key",
                                "key": "Enter your Amazon Bedrock Secret Key",
                                "region": null
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Vertex",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "VERTEX"
                                ],
                                "description": "Connector type (must be \"VERTEX\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/VERTEXAuthConfig"
                            }
                        },
                        "example": {
                            "name": "Google Vertex AI Example",
                            "type": "VERTEX",
                            "config": {
                                "key": "Enter the contents of your Google Vertex AI Service Account JSON file",
                                "region": "Region Name, e.g. us-central1"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Openai",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "OPENAI"
                                ],
                                "description": "Connector type (must be \"OPENAI\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/OPENAIAuthConfig"
                            }
                        },
                        "example": {
                            "name": "OpenAI Example",
                            "type": "OPENAI",
                            "config": {
                                "key": "Enter your OpenAI API Key"
                            }
                        }
                    },
                    {
                        "type": "object",
                        "title": "Voyage",
                        "required": [
                            "name",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name of the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "VOYAGE"
                                ],
                                "description": "Connector type (must be \"VOYAGE\")"
                            },
                            "config": {
                                "$ref": "#/components/schemas/VOYAGEAuthConfig"
                            }
                        },
                        "example": {
                            "name": "Voyage AI Example",
                            "type": "VOYAGE",
                            "config": {
                                "key": "Enter your Voyage AI API Key"
                            }
                        }
                    }
                ]
            }
        },
        "UpdatedAIPlatformConnectorData": {
            "type": "object",
            "properties": {
                "updatedConnector": {
                    "$ref": "#/components/schemas/AIPlatform"
                },
                "pipelineIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "updatedConnector"
            ]
        },
        "UpdateAIPlatformConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "data": {
                    "$ref": "#/components/schemas/UpdatedAIPlatformConnectorData"
                }
            },
            "required": [
                "message",
                "data"
            ]
        },
        "UpdateAIPlatformConnectorRequest": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": {
                        "nullable": true
                    }
                }
            },
            "required": [
                "config"
            ]
        },
        "DeleteAIPlatformConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "UploadFile": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "number"
                },
                "extension": {
                    "type": "string"
                },
                "lastModified": {
                    "type": "string",
                    "nullable": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "key",
                "name",
                "size",
                "lastModified",
                "metadata"
            ]
        },
        "GetUploadFilesResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/UploadFile"
                    }
                }
            },
            "required": [
                "message",
                "files"
            ]
        },
        "StartFileUploadToConnectorResponse": {
            "type": "object",
            "properties": {
                "uploadUrl": {
                    "type": "string"
                }
            },
            "required": [
                "uploadUrl"
            ]
        },
        "StartFileUploadToConnectorRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "contentType"
            ]
        },
        "DeleteFileResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                }
            },
            "required": [
                "message",
                "fileName"
            ]
        },
        "StartExtractionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "extractionId": {
                    "type": "string"
                }
            },
            "required": [
                "message",
                "extractionId"
            ]
        },
        "ExtractionType": {
            "type": "string",
            "enum": [
                "iris"
            ],
            "default": "iris"
        },
        "ExtractionChunkingStrategy": {
            "type": "string",
            "enum": [
                "markdown"
            ],
            "default": "markdown"
        },
        "MetadataExtractionStrategySchema": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "schema": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "schema"
            ]
        },
        "MetadataExtractionStrategy": {
            "type": "object",
            "properties": {
                "schemas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/components/schemas/MetadataExtractionStrategySchema"
                    }
                },
                "inferSchema": {
                    "type": "boolean"
                }
            }
        },
        "StartExtractionRequest": {
            "type": "object",
            "properties": {
                "fileId": {
                    "type": "string"
                },
                "type": {
                    "$ref": "#/components/schemas/ExtractionType"
                },
                "chunkingStrategy": {
                    "$ref": "#/components/schemas/ExtractionChunkingStrategy"
                },
                "chunkSize": {
                    "type": "number",
                    "default": 256
                },
                "metadata": {
                    "$ref": "#/components/schemas/MetadataExtractionStrategy"
                }
            },
            "required": [
                "fileId"
            ]
        },
        "ExtractionResult": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                },
                "chunks": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "text": {
                    "type": "string"
                },
                "metadata": {
                    "type": "string"
                },
                "metadataSchema": {
                    "type": "string"
                },
                "chunksMetadata": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "chunksSchema": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string"
                }
            },
            "required": [
                "success"
            ]
        },
        "ExtractionResultResponse": {
            "type": "object",
            "properties": {
                "ready": {
                    "type": "boolean"
                },
                "data": {
                    "$ref": "#/components/schemas/ExtractionResult"
                }
            },
            "required": [
                "ready"
            ]
        },
        "StartFileUploadResponse": {
            "type": "object",
            "properties": {
                "fileId": {
                    "type": "string"
                },
                "uploadUrl": {
                    "type": "string"
                }
            },
            "required": [
                "fileId",
                "uploadUrl"
            ]
        },
        "StartFileUploadRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "contentType": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "contentType"
            ]
        },
        "AddUserFromSourceConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "AddUserToSourceConnectorRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                },
                "selectedFiles": {
                    "anyOf": [
                        {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "mimeType": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "mimeType"
                                ]
                            }
                        },
                        {
                            "type": "object",
                            "properties": {
                                "pageIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "databaseIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    ]
                },
                "refreshToken": {
                    "type": "string"
                },
                "accessToken": {
                    "type": "string"
                }
            },
            "required": [
                "userId",
                "selectedFiles"
            ]
        },
        "UpdateUserInSourceConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "UpdateUserInSourceConnectorRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                },
                "selectedFiles": {
                    "anyOf": [
                        {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "mimeType": {
                                        "type": "string"
                                    }
                                },
                                "required": [
                                    "name",
                                    "mimeType"
                                ]
                            }
                        },
                        {
                            "type": "object",
                            "properties": {
                                "pageIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "databaseIds": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    ]
                },
                "refreshToken": {
                    "type": "string"
                },
                "accessToken": {
                    "type": "string"
                }
            },
            "required": [
                "userId"
            ]
        },
        "RemoveUserFromSourceConnectorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "required": [
                "message"
            ]
        },
        "RemoveUserFromSourceConnectorRequest": {
            "type": "object",
            "properties": {
                "userId": {
                    "type": "string"
                }
            },
            "required": [
                "userId"
            ]
        },
        "AWS_S3AuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Amazon S3",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "access-key": {
                    "type": "string",
                    "description": "Access Key. Example: Enter Access Key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                },
                "secret-key": {
                    "type": "string",
                    "description": "Secret Key. Example: Enter Secret Key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                },
                "bucket-name": {
                    "type": "string",
                    "description": "Bucket Name. Example: Enter your S3 Bucket Name"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Endpoint. Example: Enter Endpoint URL"
                },
                "region": {
                    "type": "string",
                    "description": "Region. Example: Region Name"
                },
                "archiver": {
                    "type": "boolean",
                    "description": "Allow as archive destination",
                    "default": false
                }
            },
            "required": [
                "name",
                "access-key",
                "secret-key",
                "bucket-name",
                "archiver"
            ]
        },
        "AWS_S3Config": {
            "type": "object",
            "description": "Configuration for Amazon S3 connector",
            "properties": {
                "file-extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File Extensions",
                    "default": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                    "enum": [
                        "pdf",
                        "doc,docx,gdoc,odt,rtf,epub",
                        "ppt,pptx,gslides",
                        "xls,xlsx,gsheets,ods",
                        "eml,msg",
                        "txt",
                        "html,htm",
                        "md",
                        "json",
                        "csv",
                        "jpg,jpeg,png,webp,svg,gif"
                    ]
                },
                "idle-time": {
                    "type": "number",
                    "description": "Check for updates every (seconds)",
                    "minimum": 1,
                    "default": 5
                },
                "recursive": {
                    "type": "boolean",
                    "description": "Recursively scan all folders in the bucket"
                },
                "path-prefix": {
                    "type": "string",
                    "description": "Path Prefix"
                },
                "path-metadata-regex": {
                    "type": "string",
                    "description": "Path Metadata Regex"
                },
                "path-regex-group-names": {
                    "type": "string",
                    "description": "Path Regex Group Names. Example: Enter Group Name"
                }
            },
            "required": [
                "file-extensions",
                "idle-time"
            ]
        },
        "AZURE_BLOBAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Azure Blob Storage",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "storage-account-name": {
                    "type": "string",
                    "description": "Storage Account Name. Example: Enter Storage Account Name"
                },
                "storage-account-key": {
                    "type": "string",
                    "description": "Storage Account Key. Example: Enter Storage Account Key"
                },
                "container": {
                    "type": "string",
                    "description": "Container. Example: Enter Container Name"
                },
                "endpoint": {
                    "type": "string",
                    "description": "Endpoint. Example: Enter Endpoint URL"
                }
            },
            "required": [
                "name",
                "storage-account-name",
                "storage-account-key",
                "container"
            ]
        },
        "AZURE_BLOBConfig": {
            "type": "object",
            "description": "Configuration for Azure Blob Storage connector",
            "properties": {
                "file-extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File Extensions",
                    "default": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                    "enum": [
                        "pdf",
                        "doc,docx,gdoc,odt,rtf,epub",
                        "ppt,pptx,gslides",
                        "xls,xlsx,gsheets,ods",
                        "eml,msg",
                        "txt",
                        "html,htm",
                        "md",
                        "json",
                        "csv",
                        "jpg,jpeg,png,webp,svg,gif"
                    ]
                },
                "idle-time": {
                    "type": "number",
                    "description": "Polling Interval (seconds)",
                    "minimum": 1,
                    "default": 5
                },
                "recursive": {
                    "type": "boolean",
                    "description": "Recursively scan all folders in the bucket"
                },
                "path-prefix": {
                    "type": "string",
                    "description": "Path Prefix"
                },
                "path-metadata-regex": {
                    "type": "string",
                    "description": "Path Metadata Regex"
                },
                "path-regex-group-names": {
                    "type": "string",
                    "description": "Path Regex Group Names. Example: Enter Group Name"
                }
            },
            "required": [
                "file-extensions",
                "idle-time"
            ]
        },
        "CONFLUENCEAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Confluence",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "username": {
                    "type": "string",
                    "description": "Username. Example: Enter your Confluence username"
                },
                "api-token": {
                    "type": "string",
                    "description": "API Token. Example: Enter your Confluence API token",
                    "pattern": "^\\S.*\\S$|^\\S$"
                },
                "domain": {
                    "type": "string",
                    "description": "Domain. Example: Enter your Confluence domain (e.g. my-domain.atlassian.net or confluence.<my-company>.com)"
                }
            },
            "required": [
                "name",
                "username",
                "api-token",
                "domain"
            ]
        },
        "CONFLUENCEConfig": {
            "type": "object",
            "description": "Configuration for Confluence connector",
            "properties": {
                "spaces": {
                    "type": "string",
                    "description": "Spaces. Example: Spaces to include (name, key or id)"
                },
                "root-parents": {
                    "type": "string",
                    "description": "Root Parents. Example: Enter root parent pages"
                }
            },
            "required": [
                "spaces"
            ]
        },
        "DISCORDAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Discord",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "server-id": {
                    "type": "string",
                    "description": "Server ID. Example: Enter Server ID"
                },
                "bot-token": {
                    "type": "string",
                    "description": "Bot token. Example: Enter Token",
                    "pattern": "^\\S.*\\S$|^\\S$"
                },
                "channel-ids": {
                    "type": "string",
                    "description": "Channel ID. Example: Enter channel ID"
                }
            },
            "required": [
                "name",
                "server-id",
                "bot-token",
                "channel-ids"
            ]
        },
        "DISCORDConfig": {
            "type": "object",
            "description": "Configuration for Discord connector",
            "properties": {
                "emoji": {
                    "type": "string",
                    "description": "Emoji Filter. Example: Enter custom emoji filter name"
                },
                "author": {
                    "type": "string",
                    "description": "Author Filter. Example: Enter author name"
                },
                "ignore-author": {
                    "type": "string",
                    "description": "Ignore Author Filter. Example: Enter ignore author name"
                },
                "limit": {
                    "type": "number",
                    "description": "Limit. Example: Enter limit",
                    "minimum": 1,
                    "default": 10000
                },
                "thread-message-inclusion": {
                    "type": "string",
                    "description": "Thread Message Inclusion",
                    "default": "ALL",
                    "enum": [
                        "ALL",
                        "FILTER"
                    ]
                },
                "filter-logic": {
                    "type": "string",
                    "description": "Filter Logic",
                    "default": "AND",
                    "enum": [
                        "AND",
                        "OR"
                    ]
                },
                "thread-message-mode": {
                    "type": "string",
                    "description": "Thread Message Mode",
                    "default": "CONCATENATE",
                    "enum": [
                        "CONCATENATE",
                        "SINGLE"
                    ]
                }
            }
        },
        "DROPBOXAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Dropbox (Legacy)",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "refresh-token": {
                    "type": "string",
                    "description": "Connect Dropbox to Vectorize. Example: Authorize",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "refresh-token"
            ]
        },
        "DROPBOXConfig": {
            "type": "object",
            "description": "Configuration for Dropbox (Legacy) connector",
            "properties": {
                "path-prefix": {
                    "type": "string",
                    "description": "Read from these folders (optional). Example: Enter Path: /exampleFolder/subFolder",
                    "pattern": "^\\/.*$"
                }
            }
        },
        "DROPBOX_OAUTHAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Dropbox OAuth",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "authorized-user": {
                    "type": "string",
                    "description": "Authorized User"
                },
                "selection-details": {
                    "type": "string",
                    "description": "Connect Dropbox to Vectorize. Example: Authorize"
                },
                "editedUsers": {
                    "type": "string",
                    "default": {}
                },
                "reconnectUsers": {
                    "type": "string",
                    "default": {}
                }
            },
            "required": [
                "name",
                "selection-details"
            ]
        },
        "DROPBOX_OAUTH_MULTIAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Dropbox Multi-User (Vectorize)",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "authorized-users": {
                    "type": "string",
                    "description": "Authorized Users"
                },
                "editedUsers": {
                    "type": "string",
                    "default": {}
                },
                "deletedUsers": {
                    "type": "string",
                    "default": {}
                }
            },
            "required": [
                "name"
            ]
        },
        "DROPBOX_OAUTH_MULTI_CUSTOMAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Dropbox Multi-User (White Label)",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "app-key": {
                    "type": "string",
                    "description": "Dropbox App Key. Example: Enter App Key"
                },
                "app-secret": {
                    "type": "string",
                    "description": "Dropbox App Secret. Example: Enter App Secret"
                },
                "authorized-users": {
                    "type": "string",
                    "description": "Authorized Users"
                },
                "editedUsers": {
                    "type": "string",
                    "default": {}
                },
                "deletedUsers": {
                    "type": "string",
                    "default": {}
                }
            },
            "required": [
                "name",
                "app-key",
                "app-secret"
            ]
        },
        "GOOGLE_DRIVE_OAUTHAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Google Drive OAuth",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "authorized-user": {
                    "type": "string",
                    "description": "Authorized User"
                },
                "selection-details": {
                    "type": "string",
                    "description": "Connect Google Drive to Vectorize. Example: Authorize"
                },
                "editedUsers": {
                    "type": "string",
                    "default": {}
                },
                "reconnectUsers": {
                    "type": "string",
                    "default": {}
                }
            },
            "required": [
                "name",
                "selection-details"
            ]
        },
        "GOOGLE_DRIVE_OAUTHConfig": {
            "type": "object",
            "description": "Configuration for Google Drive OAuth connector",
            "properties": {
                "file-extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File Extensions",
                    "default": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                    "enum": [
                        "pdf",
                        "doc,docx,gdoc,odt,rtf,epub",
                        "ppt,pptx,gslides",
                        "xls,xlsx,gsheets,ods",
                        "eml,msg",
                        "txt",
                        "html,htm",
                        "md",
                        "json",
                        "csv",
                        "jpg,jpeg,png,webp,svg,gif"
                    ]
                },
                "idle-time": {
                    "type": "number",
                    "description": "Polling Interval (seconds). Example: Enter polling interval in seconds",
                    "default": 5
                }
            },
            "required": [
                "file-extensions"
            ]
        },
        "GOOGLE_DRIVEAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Google Drive (Service Account)",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "service-account-json": {
                    "type": "string",
                    "description": "Service Account JSON. Example: Enter the JSON key file for the service account"
                }
            },
            "required": [
                "name",
                "service-account-json"
            ]
        },
        "GOOGLE_DRIVEConfig": {
            "type": "object",
            "description": "Configuration for Google Drive (Service Account) connector",
            "properties": {
                "file-extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File Extensions",
                    "default": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                    "enum": [
                        "pdf",
                        "doc,docx,gdoc,odt,rtf,epub",
                        "ppt,pptx,gslides",
                        "xls,xlsx,gsheets,ods",
                        "eml,msg",
                        "txt",
                        "html,htm",
                        "md",
                        "json",
                        "csv",
                        "jpg,jpeg,png,webp,svg,gif"
                    ]
                },
                "root-parents": {
                    "type": "string",
                    "description": "Restrict ingest to these folder URLs (optional). Example: Enter Folder URLs. Example: https://drive.google.com/drive/folders/1234aBCd5678_eFgH9012iJKL3456opqr",
                    "pattern": "^https:\\/\\/drive\\.google\\.com\\/drive(\\/u\\/\\d+)?\\/folders\\/[a-zA-Z0-9_-]+(\\?.*)?$"
                },
                "idle-time": {
                    "type": "number",
                    "description": "Polling Interval (seconds). Example: Enter polling interval in seconds",
                    "default": 5
                }
            },
            "required": [
                "file-extensions"
            ]
        },
        "GOOGLE_DRIVE_OAUTH_MULTIAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Google Drive Multi-User (Vectorize)",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "authorized-users": {
                    "type": "string",
                    "description": "Authorized Users"
                },
                "editedUsers": {
                    "type": "string",
                    "default": {}
                },
                "deletedUsers": {
                    "type": "string",
                    "default": {}
                }
            },
            "required": [
                "name"
            ]
        },
        "GOOGLE_DRIVE_OAUTH_MULTIConfig": {
            "type": "object",
            "description": "Configuration for Google Drive Multi-User (Vectorize) connector",
            "properties": {
                "file-extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File Extensions",
                    "default": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                    "enum": [
                        "pdf",
                        "doc,docx,gdoc,odt,rtf,epub",
                        "ppt,pptx,gslides",
                        "xls,xlsx,gsheets,ods",
                        "eml,msg",
                        "txt",
                        "html,htm",
                        "md",
                        "json",
                        "csv",
                        "jpg,jpeg,png,webp,svg,gif"
                    ]
                },
                "idle-time": {
                    "type": "number",
                    "description": "Polling Interval (seconds). Example: Enter polling interval in seconds",
                    "default": 5
                }
            },
            "required": [
                "file-extensions"
            ]
        },
        "GOOGLE_DRIVE_OAUTH_MULTI_CUSTOMAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Google Drive Multi-User (White Label)",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "oauth2-client-id": {
                    "type": "string",
                    "description": "OAuth2 Client Id. Example: Enter Client Id"
                },
                "oauth2-client-secret": {
                    "type": "string",
                    "description": "OAuth2 Client Secret. Example: Enter Client Secret"
                },
                "authorized-users": {
                    "type": "string",
                    "description": "Authorized Users"
                },
                "editedUsers": {
                    "type": "string",
                    "default": {}
                },
                "deletedUsers": {
                    "type": "string",
                    "default": {}
                }
            },
            "required": [
                "name",
                "oauth2-client-id",
                "oauth2-client-secret"
            ]
        },
        "GOOGLE_DRIVE_OAUTH_MULTI_CUSTOMConfig": {
            "type": "object",
            "description": "Configuration for Google Drive Multi-User (White Label) connector",
            "properties": {
                "file-extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File Extensions",
                    "default": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                    "enum": [
                        "pdf",
                        "doc,docx,gdoc,odt,rtf,epub",
                        "ppt,pptx,gslides",
                        "xls,xlsx,gsheets,ods",
                        "eml,msg",
                        "txt",
                        "html,htm",
                        "md",
                        "json",
                        "csv",
                        "jpg,jpeg,png,webp,svg,gif"
                    ]
                },
                "idle-time": {
                    "type": "number",
                    "description": "Polling Interval (seconds). Example: Enter polling interval in seconds",
                    "default": 5
                }
            },
            "required": [
                "file-extensions"
            ]
        },
        "FIRECRAWLAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Firecrawl",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "api-key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your Firecrawl API Key"
                }
            },
            "required": [
                "name",
                "api-key"
            ]
        },
        "FIRECRAWLConfig": {
            "type": "object",
            "description": "Configuration for Firecrawl connector",
            "properties": {
                "endpoint": {
                    "type": "string",
                    "description": "Endpoint. Example: Choose which api endpoint to use",
                    "default": "Crawl",
                    "enum": [
                        "Crawl",
                        "Scrape"
                    ]
                },
                "request": {
                    "type": "object",
                    "description": "Request Body. Example: JSON config for firecrawl's /crawl or /scrape endpoint.",
                    "default": "{ \n  \"url\": \"https://docs.vectorize.io/\",\n  \"maxDepth\": 25,\n  \"limit\": 100\n    }"
                }
            },
            "required": [
                "endpoint",
                "request"
            ]
        },
        "GCSAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for GCP Cloud Storage",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "service-account-json": {
                    "type": "string",
                    "description": "Service Account JSON. Example: Enter the JSON key file for the service account"
                },
                "bucket-name": {
                    "type": "string",
                    "description": "Bucket. Example: Enter bucket name"
                }
            },
            "required": [
                "name",
                "service-account-json",
                "bucket-name"
            ]
        },
        "GCSConfig": {
            "type": "object",
            "description": "Configuration for GCP Cloud Storage connector",
            "properties": {
                "file-extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File Extensions",
                    "default": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                    "enum": [
                        "pdf",
                        "doc,docx,gdoc,odt,rtf,epub",
                        "ppt,pptx,gslides",
                        "xls,xlsx,gsheets,ods",
                        "eml,msg",
                        "txt",
                        "html,htm",
                        "md",
                        "json",
                        "csv",
                        "jpg,jpeg,png,webp,svg,gif"
                    ]
                },
                "idle-time": {
                    "type": "number",
                    "description": "Check for updates every (seconds)",
                    "minimum": 1,
                    "default": 5
                },
                "recursive": {
                    "type": "boolean",
                    "description": "Recursively scan all folders in the bucket"
                },
                "path-prefix": {
                    "type": "string",
                    "description": "Path Prefix"
                },
                "path-metadata-regex": {
                    "type": "string",
                    "description": "Path Metadata Regex"
                },
                "path-regex-group-names": {
                    "type": "string",
                    "description": "Path Regex Group Names. Example: Enter Group Name"
                }
            },
            "required": [
                "file-extensions",
                "idle-time"
            ]
        },
        "INTERCOMAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Intercom",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "token": {
                    "type": "string",
                    "description": "Access Token. Example: Authorize Intercom Access"
                }
            },
            "required": [
                "name",
                "token"
            ]
        },
        "INTERCOMConfig": {
            "type": "object",
            "description": "Configuration for Intercom connector",
            "properties": {
                "created_at": {
                    "type": "string",
                    "format": "date",
                    "description": "Created After. Filter for conversation created after this date. Example: Enter a date: Example 2012-12-31",
                    "default": "2025-06-12"
                },
                "updated_at": {
                    "type": "string",
                    "format": "date",
                    "description": "Updated After. Filter for conversation updated after this date. Example: Enter a date: Example 2012-12-31"
                },
                "state": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "State",
                    "default": "all",
                    "enum": [
                        "open",
                        "closed",
                        "snoozed",
                        "all"
                    ]
                }
            },
            "required": [
                "created_at"
            ]
        },
        "NOTIONAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Notion",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "access-token": {
                    "type": "string",
                    "description": "Connect Notion to Vectorize - Note this will effect existing connections. test. Example: Authorize"
                },
                "s3id": {
                    "type": "string"
                },
                "editedToken": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "access-token"
            ]
        },
        "NOTIONConfig": {
            "type": "object",
            "description": "Configuration for Notion connector",
            "properties": {
                "select-resources": {
                    "type": "string",
                    "description": "Select Notion Resources"
                },
                "database-ids": {
                    "type": "string",
                    "description": "Database IDs"
                },
                "database-names": {
                    "type": "string",
                    "description": "Database Names"
                },
                "page-ids": {
                    "type": "string",
                    "description": "Page IDs"
                },
                "page-names": {
                    "type": "string",
                    "description": "Page Names"
                }
            },
            "required": [
                "select-resources",
                "database-ids",
                "database-names",
                "page-ids",
                "page-names"
            ]
        },
        "NOTION_OAUTH_MULTIAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Notion Multi-User (Vectorize)",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "authorized-users": {
                    "type": "string",
                    "description": "Authorized Users. Users who have authorized access to their Notion content"
                },
                "editedUsers": {
                    "type": "string",
                    "default": {}
                },
                "deletedUsers": {
                    "type": "string",
                    "default": {}
                }
            },
            "required": [
                "name"
            ]
        },
        "NOTION_OAUTH_MULTI_CUSTOMAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Notion Multi-User (White Label)",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "client-id": {
                    "type": "string",
                    "description": "Notion Client ID. Example: Enter Client ID"
                },
                "client-secret": {
                    "type": "string",
                    "description": "Notion Client Secret. Example: Enter Client Secret"
                },
                "authorized-users": {
                    "type": "string",
                    "description": "Authorized Users"
                },
                "editedUsers": {
                    "type": "string",
                    "default": {}
                },
                "deletedUsers": {
                    "type": "string",
                    "default": {}
                }
            },
            "required": [
                "name",
                "client-id",
                "client-secret"
            ]
        },
        "ONE_DRIVEAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for OneDrive",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "ms-client-id": {
                    "type": "string",
                    "description": "Client Id. Example: Enter Client Id"
                },
                "ms-tenant-id": {
                    "type": "string",
                    "description": "Tenant Id. Example: Enter Tenant Id"
                },
                "ms-client-secret": {
                    "type": "string",
                    "description": "Client Secret. Example: Enter Client Secret"
                },
                "users": {
                    "type": "string",
                    "description": "Users. Example: Enter users emails to import files from. Example: developer@vectorize.io"
                }
            },
            "required": [
                "name",
                "ms-client-id",
                "ms-tenant-id",
                "ms-client-secret",
                "users"
            ]
        },
        "ONE_DRIVEConfig": {
            "type": "object",
            "description": "Configuration for OneDrive connector",
            "properties": {
                "file-extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File Extensions",
                    "default": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,md,json,csv,jpg,jpeg,png,webp,svg,gif",
                    "enum": [
                        "pdf",
                        "doc,docx,gdoc,odt,rtf,epub",
                        "ppt,pptx,gslides",
                        "xls,xlsx,gsheets,ods",
                        "eml,msg",
                        "txt",
                        "html,htm",
                        "md",
                        "json",
                        "csv",
                        "jpg,jpeg,png,webp,svg,gif"
                    ]
                },
                "path-prefix": {
                    "type": "string",
                    "description": "Read starting from this folder (optional). Example: Enter Folder path: /exampleFolder/subFolder"
                }
            },
            "required": [
                "file-extensions"
            ]
        },
        "SHAREPOINTAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for SharePoint",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "ms-client-id": {
                    "type": "string",
                    "description": "Client Id. Example: Enter Client Id"
                },
                "ms-tenant-id": {
                    "type": "string",
                    "description": "Tenant Id. Example: Enter Tenant Id"
                },
                "ms-client-secret": {
                    "type": "string",
                    "description": "Client Secret. Example: Enter Client Secret"
                }
            },
            "required": [
                "name",
                "ms-client-id",
                "ms-tenant-id",
                "ms-client-secret"
            ]
        },
        "SHAREPOINTConfig": {
            "type": "object",
            "description": "Configuration for SharePoint connector",
            "properties": {
                "file-extensions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "File Extensions",
                    "default": "pdf,doc,docx,gdoc,odt,rtf,epub,ppt,pptx,gslides,xls,xlsx,gsheets,ods,eml,msg,txt,html,htm,json,csv,jpg,jpeg,png,webp,svg,gif",
                    "enum": [
                        "pdf",
                        "doc,docx,gdoc,odt,rtf,epub",
                        "ppt,pptx,gslides",
                        "xls,xlsx,gsheets,ods",
                        "eml,msg",
                        "txt",
                        "html,htm",
                        "json",
                        "csv",
                        "jpg,jpeg,png,webp,svg,gif"
                    ]
                },
                "sites": {
                    "type": "string",
                    "description": "Site Name(s). Example: Filter by site name. All sites if empty.",
                    "pattern": "^(?!.*(https?:\\/\\/|www\\.))[\\w\\s\\-.]+$"
                }
            },
            "required": [
                "file-extensions"
            ]
        },
        "WEB_CRAWLERAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Web Crawler",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "seed-urls": {
                    "type": "string",
                    "description": "Seed URL(s). Add one or more seed URLs to crawl. The crawler will start from these URLs and follow links to other pages.. Example: (e.g. https://example.com)"
                }
            },
            "required": [
                "name",
                "seed-urls"
            ]
        },
        "WEB_CRAWLERConfig": {
            "type": "object",
            "description": "Configuration for Web Crawler connector",
            "properties": {
                "allowed-domains-opt": {
                    "type": "string",
                    "description": "Additional Allowed URLs or prefix(es). Add one or more allowed URLs or URL prefixes. The crawler will read URLs that match these patterns in addition to the seed URL(s).. Example: (e.g. https://docs.example.com)"
                },
                "forbidden-paths": {
                    "type": "string",
                    "description": "Forbidden Paths. Example: Enter forbidden paths (e.g. /admin)",
                    "pattern": "^\\/([a-zA-Z0-9-_]+(\\/)?)+$"
                },
                "min-time-between-requests": {
                    "type": "number",
                    "description": "Throttle (ms). Example: Enter minimum time between requests in milliseconds",
                    "default": 500
                },
                "max-error-count": {
                    "type": "number",
                    "description": "Max Error Count. Example: Enter maximum error count",
                    "default": 5
                },
                "max-urls": {
                    "type": "number",
                    "description": "Max URLs. Example: Enter maximum number of URLs to crawl",
                    "default": 1000
                },
                "max-depth": {
                    "type": "number",
                    "description": "Max Depth. Example: Enter maximum crawl depth",
                    "default": 50
                },
                "reindex-interval-seconds": {
                    "type": "number",
                    "description": "Reindex Interval (seconds). Example: Enter reindex interval in seconds",
                    "default": 3600
                }
            }
        },
        "FILE_UPLOADAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for File Upload",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for this connector"
                },
                "path-prefix": {
                    "type": "string",
                    "description": "Path Prefix"
                },
                "files": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Choose files. Files uploaded to this connector can be used in pipelines to vectorize their contents. Note: files with the same name will be overwritten."
                }
            },
            "required": [
                "name"
            ]
        },
        "GITHUBAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for GitHub",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "oauth-token": {
                    "type": "string",
                    "description": "Personal Access Token. Example: Enter your GitHub personal access token",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "oauth-token"
            ]
        },
        "GITHUBConfig": {
            "type": "object",
            "description": "Configuration for GitHub connector",
            "properties": {
                "repositories": {
                    "type": "string",
                    "description": "Repositories. Example: Example: owner1/repo1",
                    "pattern": "^[a-zA-Z0-9-]+\\/[a-zA-Z0-9-]+$"
                },
                "include-pull-requests": {
                    "type": "boolean",
                    "description": "Include Pull Requests",
                    "default": true
                },
                "pull-request-status": {
                    "type": "string",
                    "description": "Pull Request Status",
                    "default": "all",
                    "enum": [
                        "all",
                        "open",
                        "closed",
                        "merged"
                    ]
                },
                "pull-request-labels": {
                    "type": "string",
                    "description": "Pull Request Labels. Example: Optionally filter by label. E.g. fix"
                },
                "include-issues": {
                    "type": "boolean",
                    "description": "Include Issues",
                    "default": true
                },
                "issue-status": {
                    "type": "string",
                    "description": "Issue Status",
                    "default": "all",
                    "enum": [
                        "all",
                        "open",
                        "closed"
                    ]
                },
                "issue-labels": {
                    "type": "string",
                    "description": "Issue Labels. Example: Optionally filter by label. E.g. bug"
                },
                "max-items": {
                    "type": "number",
                    "description": "Max Items. Example: Enter maximum number of items to fetch",
                    "default": 1000
                },
                "created-after": {
                    "type": "string",
                    "format": "date",
                    "description": "Created After. Filter for items created after this date. Example: Enter a date: Example 2012-12-31"
                }
            },
            "required": [
                "repositories",
                "include-pull-requests",
                "pull-request-status",
                "include-issues",
                "issue-status",
                "max-items"
            ]
        },
        "FIREFLIESAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Fireflies.ai",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name"
                },
                "api-key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your Fireflies.ai API key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "api-key"
            ]
        },
        "FIREFLIESConfig": {
            "type": "object",
            "description": "Configuration for Fireflies.ai connector",
            "properties": {
                "start-date": {
                    "type": "string",
                    "format": "date",
                    "description": "Start Date. Include meetings from this date forward. Example: Enter a date: Example 2023-12-31",
                    "default": "2025-06-12"
                },
                "end-date": {
                    "type": "string",
                    "format": "date",
                    "description": "End Date. Include meetings up to this date only. Example: Enter a date: Example 2023-12-31"
                },
                "title-filter-type": {
                    "type": "string",
                    "default": "AND"
                },
                "title-filter": {
                    "type": "string",
                    "description": "Title Filter. Only include meetings with this text in the title. Example: Enter meeting title"
                },
                "participant-filter-type": {
                    "type": "string",
                    "default": "AND"
                },
                "participant-filter": {
                    "type": "string",
                    "description": "Participant's Email Filter. Include meetings where these participants were invited. Example: Enter participant email"
                },
                "max-meetings": {
                    "type": "number",
                    "description": "Max Meetings. Enter -1 for all available meetings, or specify a limit. Example: Enter maximum number of meetings to retrieve. (-1 for all)",
                    "default": -1
                }
            },
            "required": [
                "start-date",
                "title-filter-type",
                "participant-filter-type"
            ]
        },
        "CAPELLAAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Couchbase Capella",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Capella integration"
                },
                "username": {
                    "type": "string",
                    "description": "Cluster Access Name. Example: Enter your cluster access name"
                },
                "password": {
                    "type": "string",
                    "description": "Cluster Access Password. Example: Enter your cluster access password"
                },
                "connection-string": {
                    "type": "string",
                    "description": "Connection String. Example: Enter your connection string"
                }
            },
            "required": [
                "name",
                "username",
                "password",
                "connection-string"
            ]
        },
        "CAPELLAConfig": {
            "type": "object",
            "description": "Configuration for Couchbase Capella connector",
            "properties": {
                "bucket": {
                    "type": "string",
                    "description": "Bucket Name. Example: Enter bucket name"
                },
                "scope": {
                    "type": "string",
                    "description": "Scope Name. Example: Enter scope name"
                },
                "collection": {
                    "type": "string",
                    "description": "Collection Name. Example: Enter collection name"
                },
                "index": {
                    "type": "string",
                    "description": "Search Index Name. Example: Enter search index name",
                    "maxLength": 255
                }
            },
            "required": [
                "bucket",
                "scope",
                "collection",
                "index"
            ]
        },
        "DATASTAXAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for DataStax Astra",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your DataStax integration"
                },
                "endpoint_secret": {
                    "type": "string",
                    "description": "API Endpoint. Example: Enter your API endpoint"
                },
                "token": {
                    "type": "string",
                    "description": "Application Token. Example: Enter your application token",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "endpoint_secret",
                "token"
            ]
        },
        "DATASTAXConfig": {
            "type": "object",
            "description": "Configuration for DataStax Astra connector",
            "properties": {
                "collection": {
                    "type": "string",
                    "description": "Collection Name. Example: Enter collection name",
                    "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
                }
            },
            "required": [
                "collection"
            ]
        },
        "ELASTICAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Elasticsearch",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Elastic integration"
                },
                "host": {
                    "type": "string",
                    "description": "Host. Example: Enter your host"
                },
                "port": {
                    "type": "string",
                    "description": "Port. Example: Enter your port"
                },
                "api-key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your API key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "host",
                "port",
                "api-key"
            ]
        },
        "ELASTICConfig": {
            "type": "object",
            "description": "Configuration for Elasticsearch connector",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "Index Name. Example: Enter index name",
                    "maxLength": 255,
                    "pattern": "^(?!.*(--|\\.\\.))(?!^[\\-.])(?!.*[\\-.]$)[a-z0-9-.]*$"
                }
            },
            "required": [
                "index"
            ]
        },
        "PINECONEAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Pinecone",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Pinecone integration"
                },
                "api-key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your API Key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "api-key"
            ]
        },
        "PINECONEConfig": {
            "type": "object",
            "description": "Configuration for Pinecone connector",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "Index Name. Example: Enter index name",
                    "maxLength": 45,
                    "pattern": "^(?!.*--)(?!^-)(?!.*-$)[a-z0-9-]+$"
                },
                "namespace": {
                    "type": "string",
                    "description": "Namespace. Example: Enter namespace",
                    "maxLength": 45,
                    "pattern": "^(?!.*--)(?!^-)(?!.*-$)[a-z0-9-]+$"
                }
            },
            "required": [
                "index"
            ]
        },
        "SINGLESTOREAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for SingleStore",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your SingleStore integration"
                },
                "host": {
                    "type": "string",
                    "description": "Host. Example: Enter the host of the deployment"
                },
                "port": {
                    "type": "number",
                    "description": "Port. Example: Enter the port of the deployment"
                },
                "database": {
                    "type": "string",
                    "description": "Database. Example: Enter the database name"
                },
                "username": {
                    "type": "string",
                    "description": "Username. Example: Enter the username"
                },
                "password": {
                    "type": "string",
                    "description": "Password. Example: Enter the username's password"
                }
            },
            "required": [
                "name",
                "host",
                "port",
                "database",
                "username",
                "password"
            ]
        },
        "SINGLESTOREConfig": {
            "type": "object",
            "description": "Configuration for SingleStore connector",
            "properties": {
                "table": {
                    "type": "string",
                    "description": "Table Name. Example: Enter table name",
                    "maxLength": 45,
                    "pattern": "^(?!\\b(add|alter|all|and|any|as|asc|avg|between|case|check|column|commit|constraint|create|cross|database|default|delete|desc|distinct|drop|else|exists|false|from|full|group|having|in|index|inner|insert|is|join|key|left|like|limit|max|min|not|null|on|or|order|outer|primary|right|rollback|select|set|sum|table|true|union|unique|update|values|view|where)\\b$)(?!.*--)(?!.*[-])[a-z][a-z0-9_]{0,44}$"
                }
            },
            "required": [
                "table"
            ]
        },
        "MILVUSAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Milvus",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Milvus integration"
                },
                "url": {
                    "type": "string",
                    "description": "Public Endpoint. Example: Enter your public endpoint for your Milvus cluster"
                },
                "token": {
                    "type": "string",
                    "description": "Token. Example: Enter your cluster token or Username/Password"
                },
                "username": {
                    "type": "string",
                    "description": "Username. Example: Enter your cluster Username"
                },
                "password": {
                    "type": "string",
                    "description": "Password. Example: Enter your cluster Password"
                }
            },
            "required": [
                "name",
                "url"
            ]
        },
        "MILVUSConfig": {
            "type": "object",
            "description": "Configuration for Milvus connector",
            "properties": {
                "collection": {
                    "type": "string",
                    "description": "Collection Name. Example: Enter collection name",
                    "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
                }
            },
            "required": [
                "collection"
            ]
        },
        "POSTGRESQLAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for PostgreSQL",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your PostgreSQL integration"
                },
                "host": {
                    "type": "string",
                    "description": "Host. Example: Enter the host of the deployment"
                },
                "port": {
                    "type": "number",
                    "description": "Port. Example: Enter the port of the deployment",
                    "default": 5432
                },
                "database": {
                    "type": "string",
                    "description": "Database. Example: Enter the database name"
                },
                "username": {
                    "type": "string",
                    "description": "Username. Example: Enter the username"
                },
                "password": {
                    "type": "string",
                    "description": "Password. Example: Enter the username's password"
                }
            },
            "required": [
                "name",
                "host",
                "database",
                "username",
                "password"
            ]
        },
        "POSTGRESQLConfig": {
            "type": "object",
            "description": "Configuration for PostgreSQL connector",
            "properties": {
                "table": {
                    "type": "string",
                    "description": "Table Name. Example: Enter <table name> or <schema>.<table name>",
                    "maxLength": 45,
                    "pattern": "^(?!\\b(add|alter|all|and|any|as|asc|avg|between|case|check|column|commit|constraint|create|cross|database|default|delete|desc|distinct|drop|else|exists|false|from|full|group|having|in|index|inner|insert|is|join|key|left|like|limit|max|min|not|null|on|or|order|outer|primary|right|rollback|select|set|sum|table|true|union|unique|update|values|view|where)\\b$)(?!.*--)(?!.*[-])[a-z][a-z0-9._]{0,44}$"
                }
            },
            "required": [
                "table"
            ]
        },
        "QDRANTAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Qdrant",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Qdrant integration"
                },
                "host": {
                    "type": "string",
                    "description": "Host. Example: Enter your host"
                },
                "api-key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your API key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "host",
                "api-key"
            ]
        },
        "QDRANTConfig": {
            "type": "object",
            "description": "Configuration for Qdrant connector",
            "properties": {
                "collection": {
                    "type": "string",
                    "description": "Collection Name. Example: Enter collection name",
                    "pattern": "^[a-zA-Z0-9_-]*$"
                }
            },
            "required": [
                "collection"
            ]
        },
        "SUPABASEAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Supabase",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Supabase integration"
                },
                "host": {
                    "type": "string",
                    "description": "Host. Example: Enter the host of the deployment",
                    "default": "aws-0-us-east-1.pooler.supabase.com"
                },
                "port": {
                    "type": "number",
                    "description": "Port. Example: Enter the port of the deployment",
                    "default": 5432
                },
                "database": {
                    "type": "string",
                    "description": "Database. Example: Enter the database name"
                },
                "username": {
                    "type": "string",
                    "description": "Username. Example: Enter the username"
                },
                "password": {
                    "type": "string",
                    "description": "Password. Example: Enter the username's password"
                }
            },
            "required": [
                "name",
                "host",
                "database",
                "username",
                "password"
            ]
        },
        "SUPABASEConfig": {
            "type": "object",
            "description": "Configuration for Supabase connector",
            "properties": {
                "table": {
                    "type": "string",
                    "description": "Table Name. Example: Enter <table name> or <schema>.<table name>",
                    "maxLength": 45,
                    "pattern": "^(?!\\b(add|alter|all|and|any|as|asc|avg|between|case|check|column|commit|constraint|create|cross|database|default|delete|desc|distinct|drop|else|exists|false|from|full|group|having|in|index|inner|insert|is|join|key|left|like|limit|max|min|not|null|on|or|order|outer|primary|right|rollback|select|set|sum|table|true|union|unique|update|values|view|where)\\b$)(?!.*--)(?!.*[-])[a-z][a-z0-9._]{0,44}$"
                }
            },
            "required": [
                "table"
            ]
        },
        "WEAVIATEAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Weaviate",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Weaviate integration"
                },
                "host": {
                    "type": "string",
                    "description": "Endpoint. Example: Enter your Weaviate Cluster REST Endpoint"
                },
                "api-key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your API key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "host",
                "api-key"
            ]
        },
        "WEAVIATEConfig": {
            "type": "object",
            "description": "Configuration for Weaviate connector",
            "properties": {
                "collection": {
                    "type": "string",
                    "description": "Collection Name. Example: Enter collection name",
                    "pattern": "^[A-Z][_0-9A-Za-z]*$"
                }
            },
            "required": [
                "collection"
            ]
        },
        "AZUREAISEARCHAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Azure AI Search",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Azure AI Search integration"
                },
                "service-name": {
                    "type": "string",
                    "description": "Azure AI Search Service Name. Example: Enter your Azure AI Search service name"
                },
                "api-key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your API key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "service-name",
                "api-key"
            ]
        },
        "AZUREAISEARCHConfig": {
            "type": "object",
            "description": "Configuration for Azure AI Search connector",
            "properties": {
                "index": {
                    "type": "string",
                    "description": "Index Name. Example: Enter index name",
                    "pattern": "^[a-z0-9][a-z0-9-]*[a-z0-9]$"
                }
            },
            "required": [
                "index"
            ]
        },
        "TURBOPUFFERAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Turbopuffer",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Turbopuffer integration"
                },
                "api-key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your API key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "api-key"
            ]
        },
        "TURBOPUFFERConfig": {
            "type": "object",
            "description": "Configuration for Turbopuffer connector",
            "properties": {
                "namespace": {
                    "type": "string",
                    "description": "Namespace. Example: Enter namespace name"
                }
            },
            "required": [
                "namespace"
            ]
        },
        "BEDROCKAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Amazon Bedrock",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Amazon Bedrock integration"
                },
                "access-key": {
                    "type": "string",
                    "description": "Access Key. Example: Enter your Amazon Bedrock Access Key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                },
                "key": {
                    "type": "string",
                    "description": "Secret Key. Example: Enter your Amazon Bedrock Secret Key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                },
                "region": {
                    "type": "string",
                    "description": "Region. Example: Region Name"
                }
            },
            "required": [
                "name",
                "access-key",
                "key",
                "region"
            ]
        },
        "VERTEXAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Google Vertex AI",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Google Vertex AI integration"
                },
                "key": {
                    "type": "string",
                    "description": "Service Account Json. Example: Enter the contents of your Google Vertex AI Service Account JSON file"
                },
                "region": {
                    "type": "string",
                    "description": "Region. Example: Region Name, e.g. us-central1"
                }
            },
            "required": [
                "name",
                "key",
                "region"
            ]
        },
        "OPENAIAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for OpenAI",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your OpenAI integration"
                },
                "key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your OpenAI API Key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "key"
            ]
        },
        "VOYAGEAuthConfig": {
            "type": "object",
            "description": "Authentication configuration for Voyage AI",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name. Example: Enter a descriptive name for your Voyage AI integration"
                },
                "key": {
                    "type": "string",
                    "description": "API Key. Example: Enter your Voyage AI API Key",
                    "pattern": "^\\S.*\\S$|^\\S$"
                }
            },
            "required": [
                "name",
                "key"
            ]
        },
        "SourceConnectorInput": {
            "type": "object",
            "description": "Source connector configuration",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Unique identifier for the source connector"
                },
                "type": {
                    "type": "string",
                    "description": "Type of source connector",
                    "enum": [
                        "AWS_S3",
                        "AZURE_BLOB",
                        "CONFLUENCE",
                        "DISCORD",
                        "DROPBOX",
                        "DROPBOX_OAUTH",
                        "DROPBOX_OAUTH_MULTI",
                        "DROPBOX_OAUTH_MULTI_CUSTOM",
                        "GOOGLE_DRIVE_OAUTH",
                        "GOOGLE_DRIVE",
                        "GOOGLE_DRIVE_OAUTH_MULTI",
                        "GOOGLE_DRIVE_OAUTH_MULTI_CUSTOM",
                        "FIRECRAWL",
                        "GCS",
                        "INTERCOM",
                        "NOTION",
                        "NOTION_OAUTH_MULTI",
                        "NOTION_OAUTH_MULTI_CUSTOM",
                        "ONE_DRIVE",
                        "SHAREPOINT",
                        "WEB_CRAWLER",
                        "FILE_UPLOAD",
                        "GITHUB",
                        "FIREFLIES"
                    ]
                },
                "config": {
                    "oneOf": [
                        {
                            "$ref": "#/components/schemas/AWS_S3Config"
                        },
                        {
                            "$ref": "#/components/schemas/AZURE_BLOBConfig"
                        },
                        {
                            "$ref": "#/components/schemas/CONFLUENCEConfig"
                        },
                        {
                            "$ref": "#/components/schemas/DISCORDConfig"
                        },
                        {
                            "$ref": "#/components/schemas/DROPBOXConfig"
                        },
                        {
                            "$ref": "#/components/schemas/GOOGLE_DRIVE_OAUTHConfig"
                        },
                        {
                            "$ref": "#/components/schemas/GOOGLE_DRIVEConfig"
                        },
                        {
                            "$ref": "#/components/schemas/GOOGLE_DRIVE_OAUTH_MULTIConfig"
                        },
                        {
                            "$ref": "#/components/schemas/GOOGLE_DRIVE_OAUTH_MULTI_CUSTOMConfig"
                        },
                        {
                            "$ref": "#/components/schemas/FIRECRAWLConfig"
                        },
                        {
                            "$ref": "#/components/schemas/GCSConfig"
                        },
                        {
                            "$ref": "#/components/schemas/INTERCOMConfig"
                        },
                        {
                            "$ref": "#/components/schemas/NOTIONConfig"
                        },
                        {
                            "$ref": "#/components/schemas/ONE_DRIVEConfig"
                        },
                        {
                            "$ref": "#/components/schemas/SHAREPOINTConfig"
                        },
                        {
                            "$ref": "#/components/schemas/WEB_CRAWLERConfig"
                        },
                        {
                            "$ref": "#/components/schemas/GITHUBConfig"
                        },
                        {
                            "$ref": "#/components/schemas/FIREFLIESConfig"
                        }
                    ],
                    "description": "Configuration specific to the connector type"
                }
            },
            "required": [
                "id",
                "type",
                "config"
            ]
        },
        "DestinationConnectorInput": {
            "type": "object",
            "description": "Destination connector configuration",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Unique identifier for the destination connector"
                },
                "type": {
                    "type": "string",
                    "description": "Type of destination connector",
                    "enum": [
                        "CAPELLA",
                        "DATASTAX",
                        "ELASTIC",
                        "PINECONE",
                        "SINGLESTORE",
                        "MILVUS",
                        "POSTGRESQL",
                        "QDRANT",
                        "SUPABASE",
                        "WEAVIATE",
                        "AZUREAISEARCH",
                        "TURBOPUFFER"
                    ]
                },
                "config": {
                    "oneOf": [
                        {
                            "$ref": "#/components/schemas/CAPELLAConfig"
                        },
                        {
                            "$ref": "#/components/schemas/DATASTAXConfig"
                        },
                        {
                            "$ref": "#/components/schemas/ELASTICConfig"
                        },
                        {
                            "$ref": "#/components/schemas/PINECONEConfig"
                        },
                        {
                            "$ref": "#/components/schemas/SINGLESTOREConfig"
                        },
                        {
                            "$ref": "#/components/schemas/MILVUSConfig"
                        },
                        {
                            "$ref": "#/components/schemas/POSTGRESQLConfig"
                        },
                        {
                            "$ref": "#/components/schemas/QDRANTConfig"
                        },
                        {
                            "$ref": "#/components/schemas/SUPABASEConfig"
                        },
                        {
                            "$ref": "#/components/schemas/WEAVIATEConfig"
                        },
                        {
                            "$ref": "#/components/schemas/AZUREAISEARCHConfig"
                        },
                        {
                            "$ref": "#/components/schemas/TURBOPUFFERConfig"
                        }
                    ],
                    "description": "Configuration specific to the connector type"
                }
            },
            "required": [
                "id",
                "type",
                "config"
            ]
        },
        "AIPlatformInput": {
            "type": "object",
            "description": "AI platform configuration",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Unique identifier for the AI platform"
                },
                "type": {
                    "type": "string",
                    "description": "Type of AI platform",
                    "enum": [
                        "BEDROCK",
                        "VERTEX",
                        "OPENAI",
                        "VOYAGE"
                    ]
                },
                "config": {
                    "oneOf": [],
                    "description": "Configuration specific to the AI platform"
                }
            },
            "required": [
                "id",
                "type",
                "config"
            ]
        },
        "UpdateAiplatformConnectorRequest": {
            "oneOf": [
                {
                    "type": "object",
                    "title": "Bedrock",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/BEDROCKAuthConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "access-key": "Enter your Amazon Bedrock Access Key",
                            "key": "Enter your Amazon Bedrock Secret Key",
                            "region": null
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Vertex",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/VERTEXAuthConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "key": "Enter the contents of your Google Vertex AI Service Account JSON file",
                            "region": "Region Name, e.g. us-central1"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Openai",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/OPENAIAuthConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "key": "Enter your OpenAI API Key"
                        }
                    }
                },
                {
                    "type": "object",
                    "title": "Voyage",
                    "properties": {
                        "config": {
                            "$ref": "#/components/schemas/VOYAGEAuthConfig"
                        }
                    },
                    "example": {
                        "config": {
                            "key": "Enter your Voyage AI API Key"
                        }
                    }
                }
            ]
        },
        "PipelineSourceConnectorRequest": {
            "type": "array",
            "minItems": 1,
            "items": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "Amazon S3",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "AWS_S3"
                                ],
                                "description": "Connector type (must be \"AWS_S3\")"
                            }
                        },
                        "example": {
                            "id": "7fcda494-eea2-42aa-bd79-4d4fde9f2f72",
                            "type": "AWS_S3"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Azure Blob Storage",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "AZURE_BLOB"
                                ],
                                "description": "Connector type (must be \"AZURE_BLOB\")"
                            }
                        },
                        "example": {
                            "id": "ab471549-9d5c-4957-95b2-c04d09ef3c82",
                            "type": "AZURE_BLOB"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Confluence",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "CONFLUENCE"
                                ],
                                "description": "Connector type (must be \"CONFLUENCE\")"
                            }
                        },
                        "example": {
                            "id": "7d615128-4045-4a4d-8303-567e3d0b8583",
                            "type": "CONFLUENCE"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Discord",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DISCORD"
                                ],
                                "description": "Connector type (must be \"DISCORD\")"
                            }
                        },
                        "example": {
                            "id": "99916547-656e-4e02-86b4-d8ca5e0324d1",
                            "type": "DISCORD"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Dropbox",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DROPBOX"
                                ],
                                "description": "Connector type (must be \"DROPBOX\")"
                            }
                        },
                        "example": {
                            "id": "39189bb2-76c6-4c77-8c97-d225d44682aa",
                            "type": "DROPBOX"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Dropbox Oauth",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DROPBOX_OAUTH"
                                ],
                                "description": "Connector type (must be \"DROPBOX_OAUTH\")"
                            }
                        },
                        "example": {
                            "id": "4b74354f-1781-4267-b178-61186c8d9434",
                            "type": "DROPBOX_OAUTH"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Dropbox Oauth Multi",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DROPBOX_OAUTH_MULTI"
                                ],
                                "description": "Connector type (must be \"DROPBOX_OAUTH_MULTI\")"
                            }
                        },
                        "example": {
                            "id": "beae78e5-1c1b-49c1-9ff4-fbe94ea38065",
                            "type": "DROPBOX_OAUTH_MULTI"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Dropbox Oauth Multi Custom",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DROPBOX_OAUTH_MULTI_CUSTOM"
                                ],
                                "description": "Connector type (must be \"DROPBOX_OAUTH_MULTI_CUSTOM\")"
                            }
                        },
                        "example": {
                            "id": "6983766e-acce-4b65-a6d4-7390648d9fe0",
                            "type": "DROPBOX_OAUTH_MULTI_CUSTOM"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Drive OAuth",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GOOGLE_DRIVE_OAUTH"
                                ],
                                "description": "Connector type (must be \"GOOGLE_DRIVE_OAUTH\")"
                            }
                        },
                        "example": {
                            "id": "278152cb-7ba8-454d-b6f2-8152e8d3f58f",
                            "type": "GOOGLE_DRIVE_OAUTH"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Drive",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GOOGLE_DRIVE"
                                ],
                                "description": "Connector type (must be \"GOOGLE_DRIVE\")"
                            }
                        },
                        "example": {
                            "id": "73a245b4-92d9-408e-9ff1-975bbc9f06bf",
                            "type": "GOOGLE_DRIVE"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Drive Oauth Multi",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GOOGLE_DRIVE_OAUTH_MULTI"
                                ],
                                "description": "Connector type (must be \"GOOGLE_DRIVE_OAUTH_MULTI\")"
                            }
                        },
                        "example": {
                            "id": "3d3c8017-0039-444f-8d23-5d896bdc0cc4",
                            "type": "GOOGLE_DRIVE_OAUTH_MULTI"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Drive Oauth Multi Custom",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GOOGLE_DRIVE_OAUTH_MULTI_CUSTOM"
                                ],
                                "description": "Connector type (must be \"GOOGLE_DRIVE_OAUTH_MULTI_CUSTOM\")"
                            }
                        },
                        "example": {
                            "id": "3f76c0ac-f6e1-4d97-9a87-0a921e6fdcfb",
                            "type": "GOOGLE_DRIVE_OAUTH_MULTI_CUSTOM"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Firecrawl",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "FIRECRAWL"
                                ],
                                "description": "Connector type (must be \"FIRECRAWL\")"
                            }
                        },
                        "example": {
                            "id": "f69356ed-f45f-46ca-817c-6f1fb439df45",
                            "type": "FIRECRAWL"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Google Cloud Storage",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GCS"
                                ],
                                "description": "Connector type (must be \"GCS\")"
                            }
                        },
                        "example": {
                            "id": "f78697ac-b76b-45f1-b1c9-6f42b277b152",
                            "type": "GCS"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Intercom",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "INTERCOM"
                                ],
                                "description": "Connector type (must be \"INTERCOM\")"
                            }
                        },
                        "example": {
                            "id": "04cf8d76-76ca-44a9-9074-e80db96f610d",
                            "type": "INTERCOM"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Notion",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "NOTION"
                                ],
                                "description": "Connector type (must be \"NOTION\")"
                            }
                        },
                        "example": {
                            "id": "fdc5c060-ec3f-4777-aea4-d9fc6b33421e",
                            "type": "NOTION"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Notion Oauth Multi",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "NOTION_OAUTH_MULTI"
                                ],
                                "description": "Connector type (must be \"NOTION_OAUTH_MULTI\")"
                            }
                        },
                        "example": {
                            "id": "fc84894f-8749-49e5-849e-e2bb889471ed",
                            "type": "NOTION_OAUTH_MULTI"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Notion Oauth Multi Custom",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "NOTION_OAUTH_MULTI_CUSTOM"
                                ],
                                "description": "Connector type (must be \"NOTION_OAUTH_MULTI_CUSTOM\")"
                            }
                        },
                        "example": {
                            "id": "654d8b0a-3675-43b0-84e7-f095438f0c4d",
                            "type": "NOTION_OAUTH_MULTI_CUSTOM"
                        }
                    },
                    {
                        "type": "object",
                        "title": "OneDrive",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "ONE_DRIVE"
                                ],
                                "description": "Connector type (must be \"ONE_DRIVE\")"
                            }
                        },
                        "example": {
                            "id": "5914cfcf-2ddd-452e-93de-f1fa91c1100c",
                            "type": "ONE_DRIVE"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Sharepoint",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "SHAREPOINT"
                                ],
                                "description": "Connector type (must be \"SHAREPOINT\")"
                            }
                        },
                        "example": {
                            "id": "cff6cea9-70bf-43a8-b2c8-18b26f60acff",
                            "type": "SHAREPOINT"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Web Crawler",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "WEB_CRAWLER"
                                ],
                                "description": "Connector type (must be \"WEB_CRAWLER\")"
                            }
                        },
                        "example": {
                            "id": "c7744219-d293-4ed6-ab77-6cc8939c20a0",
                            "type": "WEB_CRAWLER"
                        }
                    },
                    {
                        "type": "object",
                        "title": "File Upload",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "FILE_UPLOAD"
                                ],
                                "description": "Connector type (must be \"FILE_UPLOAD\")"
                            }
                        },
                        "example": {
                            "id": "45b74083-ed19-4a0c-b707-b2781f1061fb",
                            "type": "FILE_UPLOAD"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Github",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "GITHUB"
                                ],
                                "description": "Connector type (must be \"GITHUB\")"
                            }
                        },
                        "example": {
                            "id": "728bb09f-00bc-42af-954e-730f9bd08339",
                            "type": "GITHUB"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Fireflies",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "FIREFLIES"
                                ],
                                "description": "Connector type (must be \"FIREFLIES\")"
                            }
                        },
                        "example": {
                            "id": "11468c05-8d3d-4f50-a471-870c60bdbc0c",
                            "type": "FIREFLIES"
                        }
                    }
                ]
            }
        },
        "PipelineDestinationConnectorRequest": {
            "type": "array",
            "minItems": 1,
            "items": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "Capella",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "CAPELLA"
                                ],
                                "description": "Connector type (must be \"CAPELLA\")"
                            }
                        },
                        "example": {
                            "id": "d8456be7-7b8d-44b8-9bde-b3775c00f4f1",
                            "type": "CAPELLA"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Datastax",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "DATASTAX"
                                ],
                                "description": "Connector type (must be \"DATASTAX\")"
                            }
                        },
                        "example": {
                            "id": "36901ca6-96ad-4486-bbcb-f5fa371ddd16",
                            "type": "DATASTAX"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Elastic",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "ELASTIC"
                                ],
                                "description": "Connector type (must be \"ELASTIC\")"
                            }
                        },
                        "example": {
                            "id": "5b50ef61-5aa2-4ad2-bf7c-ece0f4f80199",
                            "type": "ELASTIC"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Pinecone",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "PINECONE"
                                ],
                                "description": "Connector type (must be \"PINECONE\")"
                            }
                        },
                        "example": {
                            "id": "d108887b-24d8-40b5-b380-b22389577747",
                            "type": "PINECONE"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Singlestore",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "SINGLESTORE"
                                ],
                                "description": "Connector type (must be \"SINGLESTORE\")"
                            }
                        },
                        "example": {
                            "id": "578186ad-c16c-4f5d-ba34-aa2a7877e8af",
                            "type": "SINGLESTORE"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Milvus",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "MILVUS"
                                ],
                                "description": "Connector type (must be \"MILVUS\")"
                            }
                        },
                        "example": {
                            "id": "f3a8514e-5ccd-491e-b354-828664ab0f97",
                            "type": "MILVUS"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Postgresql",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "POSTGRESQL"
                                ],
                                "description": "Connector type (must be \"POSTGRESQL\")"
                            }
                        },
                        "example": {
                            "id": "1c6c5283-49b8-4826-a32e-7275467a5623",
                            "type": "POSTGRESQL"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Qdrant",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "QDRANT"
                                ],
                                "description": "Connector type (must be \"QDRANT\")"
                            }
                        },
                        "example": {
                            "id": "515e9279-4f7c-4272-ad6a-73a326b1aa09",
                            "type": "QDRANT"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Supabase",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "SUPABASE"
                                ],
                                "description": "Connector type (must be \"SUPABASE\")"
                            }
                        },
                        "example": {
                            "id": "d6e757ae-6212-4906-9382-31f3db0e1166",
                            "type": "SUPABASE"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Weaviate",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "WEAVIATE"
                                ],
                                "description": "Connector type (must be \"WEAVIATE\")"
                            }
                        },
                        "example": {
                            "id": "91dc9d96-f730-4fb1-94dc-8a11148321a9",
                            "type": "WEAVIATE"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Azureaisearch",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "AZUREAISEARCH"
                                ],
                                "description": "Connector type (must be \"AZUREAISEARCH\")"
                            }
                        },
                        "example": {
                            "id": "44c8d4e1-8dc1-4f77-8bf4-c8bb6823a209",
                            "type": "AZUREAISEARCH"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Turbopuffer",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "TURBOPUFFER"
                                ],
                                "description": "Connector type (must be \"TURBOPUFFER\")"
                            }
                        },
                        "example": {
                            "id": "3cd1aa86-563d-4fb0-8213-eb43282c13b7",
                            "type": "TURBOPUFFER"
                        }
                    }
                ]
            }
        },
        "PipelineAIPlatformRequest": {
            "type": "array",
            "minItems": 1,
            "items": {
                "oneOf": [
                    {
                        "type": "object",
                        "title": "Bedrock",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "BEDROCK"
                                ],
                                "description": "Connector type (must be \"BEDROCK\")"
                            }
                        },
                        "example": {
                            "id": "ba5e335e-3118-4904-a19c-522e4f6d09e7",
                            "type": "BEDROCK"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Vertex",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "VERTEX"
                                ],
                                "description": "Connector type (must be \"VERTEX\")"
                            }
                        },
                        "example": {
                            "id": "276ccd36-3ba4-4751-892c-75e2c831698a",
                            "type": "VERTEX"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Openai",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "OPENAI"
                                ],
                                "description": "Connector type (must be \"OPENAI\")"
                            }
                        },
                        "example": {
                            "id": "6f2b0c17-1e98-4c51-8b3b-2fcd733a3490",
                            "type": "OPENAI"
                        }
                    },
                    {
                        "type": "object",
                        "title": "Voyage",
                        "required": [
                            "id",
                            "type",
                            "config"
                        ],
                        "properties": {
                            "id": {
                                "type": "string",
                                "format": "uuid",
                                "description": "Unique identifier for the connector"
                            },
                            "type": {
                                "type": "string",
                                "enum": [
                                    "VOYAGE"
                                ],
                                "description": "Connector type (must be \"VOYAGE\")"
                            }
                        },
                        "example": {
                            "id": "d8576b14-beda-4532-a4ca-40caef6b1bdc",
                            "type": "VOYAGE"
                        }
                    }
                ]
            }
        }
    },
    "parameters": {}
},
"paths": {
    "/org/{organizationId}/pipelines": {
        "post": {
            "operationId": "createPipeline",
            "summary": "Create a new pipeline",
            "description": "Creates a new pipeline with source connectors, destination connector, and AI platform configuration. The specific configuration fields required depend on the connector types selected.",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PipelineConfigurationSchema"
                        },
                        "example": {
                            "sourceConnectors": [
                                {
                                    "id": "4d61dfa9-ce3c-48df-824f-85d1d7421a84",
                                    "type": "AWS_S3"
                                }
                            ],
                            "destinationConnector": [
                                {
                                    "id": "e6d268f5-7164-4411-a24b-3d59c78958c8",
                                    "type": "CAPELLA"
                                }
                            ],
                            "aiPlatform": [
                                {
                                    "id": "65b8d1f0-32ad-459f-8799-7d359abf4ee4",
                                    "type": "BEDROCK"
                                }
                            ],
                            "pipelineName": "Data Processing Pipeline",
                            "schedule": {
                                "type": "manual"
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Pipeline created successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePipelineResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "data": {}
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "get": {
            "operationId": "getPipelines",
            "summary": "Get all pipelines",
            "description": "Returns a list of all pipelines in the organization",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Pipelines retrieved successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetPipelinesResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "data": [
                                    {
                                        "id": "89628a1a-fd2f-4c4e-a7bc-2f32280c6cac",
                                        "name": "Example Item",
                                        "type": "example-type",
                                        "status": "active"
                                    }
                                ]
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/pipelines/{pipelineId}": {
        "get": {
            "operationId": "getPipeline",
            "summary": "Get a pipeline",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "pipelineId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Pipeline fetched successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetPipelineResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "data": {
                                    "id": "d9b5c842-9e69-4340-843b-d66f347ab32f",
                                    "name": "My PipelineSummary",
                                    "documentCount": 42,
                                    "sourceConnectorAuthIds": [],
                                    "destinationConnectorAuthIds": [],
                                    "aiPlatformAuthIds": [],
                                    "sourceConnectorTypes": [],
                                    "destinationConnectorTypes": [],
                                    "aiPlatformTypes": [],
                                    "createdAt": "example-createdAt",
                                    "createdBy": "example-createdBy",
                                    "status": "active",
                                    "configDoc": {},
                                    "sourceConnectors": [],
                                    "destinationConnectors": [],
                                    "aiPlatforms": []
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "operationId": "deletePipeline",
            "summary": "Delete a pipeline",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "pipelineId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Pipeline deleted successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeletePipelineResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/pipelines/{pipelineId}/events": {
        "get": {
            "operationId": "getPipelineEvents",
            "summary": "Get pipeline events",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "pipelineId",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": false,
                    "name": "nextToken",
                    "in": "query"
                }
            ],
            "responses": {
                "200": {
                    "description": "Pipeline events fetched successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetPipelineEventsResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "nextToken": "token_example_123456",
                                "data": [
                                    {
                                        "id": "f4b6a53d-7565-417a-95c9-f9c8155a6d40",
                                        "name": "Example Item",
                                        "type": "example-type",
                                        "status": "active"
                                    }
                                ]
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/pipelines/{pipelineId}/metrics": {
        "get": {
            "operationId": "getPipelineMetrics",
            "summary": "Get pipeline metrics",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "pipelineId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Pipeline metrics fetched successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetPipelineMetricsResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "data": [
                                    {
                                        "id": "70ebe007-331d-4c9d-b58e-78b6aa60155f",
                                        "name": "Example Item",
                                        "type": "example-type",
                                        "status": "active"
                                    }
                                ]
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/pipelines/{pipelineId}/retrieval": {
        "post": {
            "operationId": "retrieveDocuments",
            "summary": "Retrieve documents from a pipeline",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "pipelineId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RetrieveDocumentsRequest"
                        },
                        "example": {
                            "question": "example-question",
                            "numResults": 100,
                            "rerank": true,
                            "metadata-filters": [],
                            "context": {
                                "messages": []
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Documents retrieved successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RetrieveDocumentsResponse"
                            },
                            "example": {
                                "question": "example-question",
                                "documents": [],
                                "average_relevancy": 100,
                                "ndcg": 100
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/pipelines/{pipelineId}/start": {
        "post": {
            "operationId": "startPipeline",
            "summary": "Start a pipeline",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "pipelineId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Pipeline started successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartPipelineResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/pipelines/{pipelineId}/stop": {
        "post": {
            "operationId": "stopPipeline",
            "summary": "Stop a pipeline",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "pipelineId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Pipeline stopped successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StopPipelineResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/pipelines/{pipelineId}/deep-research": {
        "post": {
            "operationId": "startDeepResearch",
            "summary": "Start a deep research",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "pipelineId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/StartDeepResearchRequest"
                        },
                        "example": {
                            "query": "example-query",
                            "webSearch": true,
                            "schema": "example-schema",
                            "n8n": {
                                "account": "example-account",
                                "webhookPath": "/example/path",
                                "headers": {}
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Deep Research started successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartDeepResearchResponse"
                            },
                            "example": {
                                "researchId": "c9771f69-5a6f-4739-936d-c283ac250c2a"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/pipelines/{pipelineId}/deep-research/{researchId}": {
        "get": {
            "operationId": "getDeepResearchResult",
            "summary": "Get deep research result",
            "tags": [
                "Pipelines"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "pipeline",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "researchId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get Deep Research was successful",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetDeepResearchResponse"
                            },
                            "example": {
                                "ready": true,
                                "data": {
                                    "success": true,
                                    "events": [],
                                    "markdown": "example-markdown",
                                    "error": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/connectors/sources": {
        "post": {
            "operationId": "createSourceConnector",
            "summary": "Create a new source connector",
            "description": "Creates a new source connector for data ingestion. The specific configuration fields required depend on the connector type selected.",
            "tags": [
                "Connectors/Source Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateSourceConnectorRequest"
                        },
                        "example": [
                            {
                                "name": "My CreateSourceConnectorRequest",
                                "type": "AWS_S3",
                                "config": {
                                    "file-extensions": "pdf",
                                    "idle-time": 300,
                                    "recursive": true,
                                    "path-prefix": "/example/path",
                                    "path-metadata-regex": "/example/path",
                                    "path-regex-group-names": "/example/path"
                                }
                            }
                        ]
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Connector successfully created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateSourceConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "connectors": []
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "get": {
            "operationId": "getSourceConnectors",
            "summary": "Get all existing source connectors",
            "tags": [
                "Connectors/Source Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get all source connectors",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "sourceConnectors": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/SourceConnector"
                                        }
                                    }
                                },
                                "required": [
                                    "sourceConnectors"
                                ]
                            },
                            "example": {
                                "sourceConnectors": [
                                    {
                                        "id": "09446dda-5528-40c7-af4c-27c5dd07db06",
                                        "type": "AWS_S3",
                                        "name": "S3 Documents Bucket",
                                        "createdAt": "2025-06-12T19:49:20.615Z",
                                        "verificationStatus": "verified"
                                    },
                                    {
                                        "id": "20d08632-842d-44e5-befd-7a70ea158aa5",
                                        "type": "GOOGLE_DRIVE",
                                        "name": "Team Shared Drive",
                                        "createdAt": "2025-06-12T19:49:20.615Z",
                                        "verificationStatus": "verified"
                                    }
                                ]
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/connectors/sources/{sourceConnectorId}": {
        "get": {
            "operationId": "getSourceConnector",
            "summary": "Get a source connector",
            "tags": [
                "Connectors/Source Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "sourceConnectorId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get a source connector",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SourceConnector"
                            },
                            "example": {
                                "id": "7c8b6c1b-b165-4114-9d69-6a8b12c48af2",
                                "type": "example-type",
                                "name": "My SourceConnector",
                                "configDoc": {},
                                "createdAt": "example-createdAt",
                                "createdById": "3656d166-0e5a-4194-bda7-35b560f7968f",
                                "lastUpdatedById": "bd1fcb97-f39b-4c8a-9e36-e44119dc969d",
                                "createdByEmail": "user@example.com",
                                "lastUpdatedByEmail": "user@example.com",
                                "errorMessage": "Operation completed successfully",
                                "verificationStatus": "verified"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "operationId": "updateSourceConnector",
            "summary": "Update a source connector",
            "tags": [
                "Connectors/Source Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "sourceConnectorId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateSourceConnectorRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Source connector successfully updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSourceConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "data": {
                                    "updatedConnector": {
                                        "id": "dad1f732-4227-40d9-b819-dff89e093336",
                                        "type": "example-type",
                                        "name": "My SourceConnector",
                                        "configDoc": {},
                                        "createdAt": "example-createdAt",
                                        "createdById": "8e84ce2f-6ea6-4c40-bb68-482602dfbcc4",
                                        "lastUpdatedById": "1a0a0be2-fc06-4e58-9859-499214c8f662",
                                        "createdByEmail": "user@example.com",
                                        "lastUpdatedByEmail": "user@example.com",
                                        "errorMessage": "Operation completed successfully",
                                        "verificationStatus": "verified"
                                    },
                                    "pipelineIds": []
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "operationId": "deleteSourceConnector",
            "summary": "Delete a source connector",
            "tags": [
                "Connectors/Source Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "sourceConnectorId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Source connector successfully deleted",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteSourceConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/connectors/destinations": {
        "post": {
            "operationId": "createDestinationConnector",
            "summary": "Create a new destination connector",
            "description": "Creates a new destination connector for data storage. The specific configuration fields required depend on the connector type selected.",
            "tags": [
                "Connectors/Destination Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateDestinationConnectorRequest"
                        },
                        "example": [
                            {
                                "name": "My CreateDestinationConnectorRequest",
                                "type": "CAPELLA",
                                "config": {
                                    "bucket": "example-bucket",
                                    "scope": "example-scope",
                                    "collection": "example-collection",
                                    "index": "example-index"
                                }
                            }
                        ]
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Connector successfully created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateDestinationConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "connectors": []
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "get": {
            "operationId": "getDestinationConnectors",
            "summary": "Get all existing destination connectors",
            "tags": [
                "Connectors/Destination Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get all destination connectors",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "destinationConnectors": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/DestinationConnector"
                                        }
                                    }
                                },
                                "required": [
                                    "destinationConnectors"
                                ]
                            },
                            "example": {
                                "destinationConnectors": []
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/connectors/destinations/{destinationConnectorId}": {
        "get": {
            "operationId": "getDestinationConnector",
            "summary": "Get a destination connector",
            "tags": [
                "Connectors/Destination Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "destinationConnectorId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get a destination connector",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DestinationConnector"
                            },
                            "example": {
                                "id": "665bddca-2b8d-4b09-b146-2a0fbad8fd1c",
                                "type": "example-type",
                                "name": "My DestinationConnector",
                                "configDoc": {},
                                "createdAt": "example-createdAt",
                                "createdById": "60381ff5-7210-46a3-9502-a5231357b642",
                                "lastUpdatedById": "2c9413f7-7d26-49d9-babc-4b223dcb38b8",
                                "createdByEmail": "user@example.com",
                                "lastUpdatedByEmail": "user@example.com",
                                "errorMessage": "Operation completed successfully",
                                "verificationStatus": "verified"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "operationId": "updateDestinationConnector",
            "summary": "Update a destination connector",
            "tags": [
                "Connectors/Destination Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "destinationConnectorId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateDestinationConnectorRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Destination connector successfully updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateDestinationConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "data": {
                                    "updatedConnector": {
                                        "id": "2b1cedf6-641e-4abf-a4ed-776ff2e17d76",
                                        "type": "example-type",
                                        "name": "My DestinationConnector",
                                        "configDoc": {},
                                        "createdAt": "example-createdAt",
                                        "createdById": "bdb73dad-4402-4748-bd2c-12038c16bdb5",
                                        "lastUpdatedById": "7597cb79-ba31-4b11-b2ee-903a3dd5ebd4",
                                        "createdByEmail": "user@example.com",
                                        "lastUpdatedByEmail": "user@example.com",
                                        "errorMessage": "Operation completed successfully",
                                        "verificationStatus": "verified"
                                    },
                                    "pipelineIds": []
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "operationId": "deleteDestinationConnector",
            "summary": "Delete a destination connector",
            "tags": [
                "Connectors/Destination Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "destinationConnectorId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Destination connector successfully deleted",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteDestinationConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/connectors/aiplatforms": {
        "post": {
            "operationId": "createAIPlatformConnector",
            "summary": "Create a new AI platform connector",
            "description": "Creates a new AI platform connector for embeddings and processing. The specific configuration fields required depend on the platform type selected.",
            "tags": [
                "Connectors/AI Platforms"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CreateAIPlatformConnectorRequest"
                        },
                        "example": [
                            {
                                "name": "My CreateAIPlatformConnectorRequest",
                                "type": "BEDROCK",
                                "config": {
                                    "name": "My BEDROCKAuthConfig",
                                    "access-key": "AKIAIOSFODNN7EXAMPLE",
                                    "key": "key_example_123456",
                                    "region": "us-east-1"
                                }
                            }
                        ]
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Connector successfully created",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAIPlatformConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "connectors": []
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "get": {
            "operationId": "getAIPlatformConnectors",
            "summary": "Get all existing AI Platform connectors",
            "tags": [
                "Connectors/AI Platforms"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get all existing AI Platform connectors",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "aiPlatformConnectors": {
                                        "type": "array",
                                        "items": {
                                            "$ref": "#/components/schemas/AIPlatform"
                                        }
                                    }
                                },
                                "required": [
                                    "aiPlatformConnectors"
                                ]
                            },
                            "example": {
                                "aiPlatformConnectors": []
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/connectors/aiplatforms/{aiplatformId}": {
        "get": {
            "operationId": "getAIPlatformConnector",
            "summary": "Get an AI platform connector",
            "tags": [
                "Connectors/AI Platforms"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "aiplatformId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Get an AI platform connector",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AIPlatform"
                            },
                            "example": {
                                "id": "e2176580-2423-4753-81a0-63788261dca7",
                                "type": "example-type",
                                "name": "My AIPlatform",
                                "configDoc": {},
                                "createdAt": "example-createdAt",
                                "createdById": "126b440d-a790-4fc2-a891-32f046f2a7d1",
                                "lastUpdatedById": "970e121f-ff1f-44ff-923f-e428868a919e",
                                "createdByEmail": "user@example.com",
                                "lastUpdatedByEmail": "user@example.com",
                                "errorMessage": "Operation completed successfully",
                                "verificationStatus": "verified"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "operationId": "updateAIPlatformConnector",
            "summary": "Update an AI Platform connector",
            "tags": [
                "Connectors/AI Platforms"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "aiplatformId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateAiplatformConnectorRequest"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "AI Platform connector successfully updated",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateAIPlatformConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "data": {
                                    "updatedConnector": {
                                        "id": "bcc5f3a2-4536-4b0a-8714-01692496e00f",
                                        "type": "example-type",
                                        "name": "My AIPlatform",
                                        "configDoc": {},
                                        "createdAt": "example-createdAt",
                                        "createdById": "87f8375a-1d87-40df-883d-94c8ff660970",
                                        "lastUpdatedById": "1d2cfc64-5450-42d3-b407-935325ea03e7",
                                        "createdByEmail": "user@example.com",
                                        "lastUpdatedByEmail": "user@example.com",
                                        "errorMessage": "Operation completed successfully",
                                        "verificationStatus": "verified"
                                    },
                                    "pipelineIds": []
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "operationId": "deleteAIPlatform",
            "summary": "Delete an AI platform connector",
            "tags": [
                "Connectors/AI Platforms"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "aiplatformId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "AI Platform connector successfully deleted",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteAIPlatformConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/uploads/{connectorId}/files": {
        "get": {
            "operationId": "getUploadFilesFromConnector",
            "summary": "Get uploaded files from a file upload connector",
            "tags": [
                "Uploads"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "connectorId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Files retrieved successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetUploadFilesResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "files": []
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "put": {
            "operationId": "startFileUploadToConnector",
            "summary": "Upload a file to a file upload connector",
            "tags": [
                "Uploads"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "connectorId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/StartFileUploadToConnectorRequest"
                        },
                        "example": {
                            "name": "My StartFileUploadToConnectorRequest",
                            "contentType": "document",
                            "metadata": "example-metadata"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "File ready to be uploaded",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartFileUploadToConnectorResponse"
                            },
                            "example": {
                                "uploadUrl": "https://api.example.com"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "operationId": "deleteFileFromConnector",
            "summary": "Delete a file from a file upload connector",
            "tags": [
                "Uploads"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "connectorId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "File deleted successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteFileResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "fileName": "document.pdf"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/extraction": {
        "post": {
            "operationId": "startExtraction",
            "summary": "Start content extraction from a file",
            "tags": [
                "Extraction"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/StartExtractionRequest"
                        },
                        "example": {
                            "fileId": "2a53d7fa-748a-4b7f-a35b-e5f73944f444",
                            "type": "iris",
                            "chunkingStrategy": "markdown",
                            "chunkSize": 20,
                            "metadata": {
                                "schemas": [],
                                "inferSchema": true
                            }
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "Extraction started successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartExtractionResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully",
                                "extractionId": "54033280-6cbd-493f-8047-1722afc6ae84"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/extraction/{extractionId}": {
        "get": {
            "operationId": "getExtractionResult",
            "summary": "Get extraction result",
            "tags": [
                "Extraction"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "extractionId",
                    "in": "path"
                }
            ],
            "responses": {
                "200": {
                    "description": "Extraction started successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExtractionResultResponse"
                            },
                            "example": {
                                "ready": true,
                                "data": {
                                    "success": true,
                                    "chunks": [],
                                    "text": "example-text",
                                    "metadata": "example-metadata",
                                    "metadataSchema": "example-metadataSchema",
                                    "chunksMetadata": [],
                                    "chunksSchema": [],
                                    "error": null
                                }
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/files": {
        "post": {
            "operationId": "startFileUpload",
            "summary": "Upload a generic file to the platform",
            "tags": [
                "Files"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organizationId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/StartFileUploadRequest"
                        },
                        "example": {
                            "name": "My StartFileUploadRequest",
                            "contentType": "document"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "File upload started successfully",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StartFileUploadResponse"
                            },
                            "example": {
                                "fileId": "057d09e1-77a4-4cf3-8af5-ede594a3a2aa",
                                "uploadUrl": "https://api.example.com"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    },
    "/org/{organizationId}/connectors/sources/{sourceConnectorId}/users": {
        "post": {
            "operationId": "addUserToSourceConnector",
            "summary": "Add a user to a source connector",
            "tags": [
                "Connectors/Source Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "sourceConnectorId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AddUserToSourceConnectorRequest"
                        },
                        "example": {
                            "userId": "29cc613c-dcb8-429e-88fe-be19dbd8b312",
                            "selectedFiles": {},
                            "refreshToken": "refresh_token_example_123456",
                            "accessToken": "access_token_example_123456"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "User successfully added to the source connector",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddUserFromSourceConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "patch": {
            "operationId": "updateUserInSourceConnector",
            "summary": "Update a source connector user",
            "tags": [
                "Connectors/Source Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "sourceConnectorId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/UpdateUserInSourceConnectorRequest"
                        },
                        "example": {
                            "userId": "1dda2405-5b9d-403a-bdf7-01a78cb796da",
                            "selectedFiles": {},
                            "refreshToken": "refresh_token_example_123456",
                            "accessToken": "access_token_example_123456"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "User successfully updated in the source connector",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserInSourceConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        },
        "delete": {
            "operationId": "deleteUserFromSourceConnector",
            "summary": "Delete a source connector user",
            "tags": [
                "Connectors/Source Connectors"
            ],
            "security": [
                {
                    "bearerAuth": []
                }
            ],
            "parameters": [
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "organization",
                    "in": "path"
                },
                {
                    "schema": {
                        "type": "string"
                    },
                    "required": true,
                    "name": "sourceConnectorId",
                    "in": "path"
                }
            ],
            "requestBody": {
                "required": true,
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/RemoveUserFromSourceConnectorRequest"
                        },
                        "example": {
                            "userId": "a3703b11-2eba-45e3-87cd-7e5e7c076e3a"
                        }
                    }
                }
            },
            "responses": {
                "200": {
                    "description": "User successfully removed from the source connector",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RemoveUserFromSourceConnectorResponse"
                            },
                            "example": {
                                "message": "Operation completed successfully"
                            }
                        }
                    }
                },
                "400": {
                    "description": "Invalid request",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "401": {
                    "description": "Unauthorized",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "403": {
                    "description": "Forbidden",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "404": {
                    "description": "Not found",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                },
                "500": {
                    "description": "Internal server error",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string"
                                    },
                                    "details": {
                                        "type": "string"
                                    },
                                    "failedUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "successfulUpdates": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "required": [
                                    "error"
                                ]
                            },
                            "example": {
                                "error": "An error occurred",
                                "details": "example-details",
                                "failedUpdates": [],
                                "successfulUpdates": []
                            }
                        }
                    }
                }
            }
        }
    }
}
}