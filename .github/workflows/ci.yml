name: CI
on:
  pull_request:
    branches:
      - main

concurrency:
  group: ci-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-ts:
    name: Tests (TS)
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Install node
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org/"

      - name: "Install client"
        run: |
          cd src/ts
          npm install
          npm run build

      - name: "Run tests"
        env:
            VECTORIZE_API_KEY: ${{ secrets.VECTORIZE_TOKEN }}
            VECTORIZE_ORGANIZATION_ID: ${{ secrets.VECTORIZE_ORG }}
            VECTORIZE_ENV: dev
        run: |
          cd tests/ts
          npm i
          npm run test
          

  build-python:
    name: Tests (Python)
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: "Setup: Python 3.11"
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry==1.8.3

      - name: Build
        run: |
          cd src/python
          poetry install
          poetry build

      - name: Tests
        env:
          VECTORIZE_API_KEY: ${{ secrets.VECTORIZE_TOKEN }}
          VECTORIZE_ORGANIZATION_ID: ${{ secrets.VECTORIZE_ORG }}
          VECTORIZE_ENV: dev
        run: |
          cd tests/python
          poetry install
          poetry run pytest
