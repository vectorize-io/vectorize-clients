# coding: utf-8

"""
    Vectorize API (Beta)

    API for Vectorize services

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vectorize_client.models.ai_platform_schema import AIPlatformSchema

class TestAIPlatformSchema(unittest.TestCase):
    """AIPlatformSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AIPlatformSchema:
        """Test AIPlatformSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AIPlatformSchema`
        """
        model = AIPlatformSchema()
        if include_optional:
            return AIPlatformSchema(
                id = '',
                type = 'BEDROCK',
                config = vectorize_client.models.ai_platform_config_schema.AIPlatformConfigSchema(
                    embedding_model = 'VECTORIZE_OPEN_AI_TEXT_EMBEDDING_2', 
                    chunking_strategy = 'FIXED', 
                    chunk_size = 1, 
                    chunk_overlap = 0, 
                    dimensions = 1, 
                    extraction_strategy = 'FAST', )
            )
        else:
            return AIPlatformSchema(
                id = '',
                type = 'BEDROCK',
                config = vectorize_client.models.ai_platform_config_schema.AIPlatformConfigSchema(
                    embedding_model = 'VECTORIZE_OPEN_AI_TEXT_EMBEDDING_2', 
                    chunking_strategy = 'FIXED', 
                    chunk_size = 1, 
                    chunk_overlap = 0, 
                    dimensions = 1, 
                    extraction_strategy = 'FAST', ),
        )
        """

    def testAIPlatformSchema(self):
        """Test AIPlatformSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
