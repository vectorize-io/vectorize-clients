# coding: utf-8

"""
    Vectorize API (Beta)

    API for Vectorize services

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vectorize_client.models.get_pipeline_response import GetPipelineResponse

class TestGetPipelineResponse(unittest.TestCase):
    """GetPipelineResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPipelineResponse:
        """Test GetPipelineResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPipelineResponse`
        """
        model = GetPipelineResponse()
        if include_optional:
            return GetPipelineResponse(
                message = '',
                data = vectorize_client.models.pipeline_summary.PipelineSummary(
                    id = '', 
                    name = '', 
                    document_count = 1.337, 
                    source_connector_auth_ids = [
                        ''
                        ], 
                    destination_connector_auth_ids = [
                        ''
                        ], 
                    ai_platform_auth_ids = [
                        ''
                        ], 
                    source_connector_types = [
                        ''
                        ], 
                    destination_connector_types = [
                        ''
                        ], 
                    ai_platform_types = [
                        ''
                        ], 
                    created_at = '', 
                    created_by = '', 
                    status = '', 
                    config_doc = {
                        'key' : null
                        }, 
                    source_connectors = [
                        vectorize_client.models.source_connector.SourceConnector(
                            id = '', 
                            type = '', 
                            name = '', 
                            created_at = '', 
                            created_by_id = '', 
                            last_updated_by_id = '', 
                            created_by_email = '', 
                            last_updated_by_email = '', 
                            error_message = '', 
                            verification_status = '', )
                        ], 
                    destination_connectors = [
                        vectorize_client.models.destination_connector.DestinationConnector(
                            id = '', 
                            type = '', 
                            name = '', 
                            created_at = '', 
                            created_by_id = '', 
                            last_updated_by_id = '', 
                            created_by_email = '', 
                            last_updated_by_email = '', 
                            error_message = '', 
                            verification_status = '', )
                        ], 
                    ai_platforms = [
                        vectorize_client.models.ai_platform.AIPlatform(
                            id = '', 
                            type = '', 
                            name = '', 
                            created_at = '', 
                            created_by_id = '', 
                            last_updated_by_id = '', 
                            created_by_email = '', 
                            last_updated_by_email = '', 
                            error_message = '', 
                            verification_status = '', )
                        ], )
            )
        else:
            return GetPipelineResponse(
                message = '',
                data = vectorize_client.models.pipeline_summary.PipelineSummary(
                    id = '', 
                    name = '', 
                    document_count = 1.337, 
                    source_connector_auth_ids = [
                        ''
                        ], 
                    destination_connector_auth_ids = [
                        ''
                        ], 
                    ai_platform_auth_ids = [
                        ''
                        ], 
                    source_connector_types = [
                        ''
                        ], 
                    destination_connector_types = [
                        ''
                        ], 
                    ai_platform_types = [
                        ''
                        ], 
                    created_at = '', 
                    created_by = '', 
                    status = '', 
                    config_doc = {
                        'key' : null
                        }, 
                    source_connectors = [
                        vectorize_client.models.source_connector.SourceConnector(
                            id = '', 
                            type = '', 
                            name = '', 
                            created_at = '', 
                            created_by_id = '', 
                            last_updated_by_id = '', 
                            created_by_email = '', 
                            last_updated_by_email = '', 
                            error_message = '', 
                            verification_status = '', )
                        ], 
                    destination_connectors = [
                        vectorize_client.models.destination_connector.DestinationConnector(
                            id = '', 
                            type = '', 
                            name = '', 
                            created_at = '', 
                            created_by_id = '', 
                            last_updated_by_id = '', 
                            created_by_email = '', 
                            last_updated_by_email = '', 
                            error_message = '', 
                            verification_status = '', )
                        ], 
                    ai_platforms = [
                        vectorize_client.models.ai_platform.AIPlatform(
                            id = '', 
                            type = '', 
                            name = '', 
                            created_at = '', 
                            created_by_id = '', 
                            last_updated_by_id = '', 
                            created_by_email = '', 
                            last_updated_by_email = '', 
                            error_message = '', 
                            verification_status = '', )
                        ], ),
        )
        """

    def testGetPipelineResponse(self):
        """Test GetPipelineResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
