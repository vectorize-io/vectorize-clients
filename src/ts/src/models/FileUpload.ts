/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FileUpload
 */
export interface FileUpload {
    /**
     * Name of the connector
     * @type {string}
     * @memberof FileUpload
     */
    name: string;
    /**
     * Connector type (must be "FILE_UPLOAD")
     * @type {string}
     * @memberof FileUpload
     */
    type: FileUploadTypeEnum;
}


/**
 * @export
 */
export const FileUploadTypeEnum = {
    FileUpload: 'FILE_UPLOAD'
} as const;
export type FileUploadTypeEnum = typeof FileUploadTypeEnum[keyof typeof FileUploadTypeEnum];


/**
 * Check if a given object implements the FileUpload interface.
 */
export function instanceOfFileUpload(value: object): value is FileUpload {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function FileUploadFromJSON(json: any): FileUpload {
    return FileUploadFromJSONTyped(json, false);
}

export function FileUploadFromJSONTyped(json: any, ignoreDiscriminator: boolean): FileUpload {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
    };
}

export function FileUploadToJSON(json: any): FileUpload {
    return FileUploadToJSONTyped(json, false);
}

export function FileUploadToJSONTyped(value?: FileUpload | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
    };
}

