/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ONEDRIVEConfig } from './ONEDRIVEConfig';
import {
    ONEDRIVEConfigFromJSON,
    ONEDRIVEConfigFromJSONTyped,
    ONEDRIVEConfigToJSON,
    ONEDRIVEConfigToJSONTyped,
} from './ONEDRIVEConfig';

/**
 * 
 * @export
 * @interface OneDrive
 */
export interface OneDrive {
    /**
     * Name of the connector
     * @type {string}
     * @memberof OneDrive
     */
    name: string;
    /**
     * Connector type (must be "ONE_DRIVE")
     * @type {string}
     * @memberof OneDrive
     */
    type: OneDriveTypeEnum;
    /**
     * 
     * @type {ONEDRIVEConfig}
     * @memberof OneDrive
     */
    config: ONEDRIVEConfig;
}


/**
 * @export
 */
export const OneDriveTypeEnum = {
    OneDrive: 'ONE_DRIVE'
} as const;
export type OneDriveTypeEnum = typeof OneDriveTypeEnum[keyof typeof OneDriveTypeEnum];


/**
 * Check if a given object implements the OneDrive interface.
 */
export function instanceOfOneDrive(value: object): value is OneDrive {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    return true;
}

export function OneDriveFromJSON(json: any): OneDrive {
    return OneDriveFromJSONTyped(json, false);
}

export function OneDriveFromJSONTyped(json: any, ignoreDiscriminator: boolean): OneDrive {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'config': ONEDRIVEConfigFromJSON(json['config']),
    };
}

export function OneDriveToJSON(json: any): OneDrive {
    return OneDriveToJSONTyped(json, false);
}

export function OneDriveToJSONTyped(value?: OneDrive | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'config': ONEDRIVEConfigToJSON(value['config']),
    };
}

