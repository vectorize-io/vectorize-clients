/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API (Beta)
 * API for Vectorize services
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DestinationConnectorType } from './DestinationConnectorType';
import {
    DestinationConnectorTypeFromJSON,
    DestinationConnectorTypeFromJSONTyped,
    DestinationConnectorTypeToJSON,
    DestinationConnectorTypeToJSONTyped,
} from './DestinationConnectorType';

/**
 * 
 * @export
 * @interface CreateDestinationConnector
 */
export interface CreateDestinationConnector {
    /**
     * 
     * @type {string}
     * @memberof CreateDestinationConnector
     */
    name: string;
    /**
     * 
     * @type {DestinationConnectorType}
     * @memberof CreateDestinationConnector
     */
    type: DestinationConnectorType;
    /**
     * 
     * @type {{ [key: string]: any | null; }}
     * @memberof CreateDestinationConnector
     */
    config?: { [key: string]: any | null; };
}



/**
 * Check if a given object implements the CreateDestinationConnector interface.
 */
export function instanceOfCreateDestinationConnector(value: object): value is CreateDestinationConnector {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CreateDestinationConnectorFromJSON(json: any): CreateDestinationConnector {
    return CreateDestinationConnectorFromJSONTyped(json, false);
}

export function CreateDestinationConnectorFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDestinationConnector {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': DestinationConnectorTypeFromJSON(json['type']),
        'config': json['config'] == null ? undefined : json['config'],
    };
}

export function CreateDestinationConnectorToJSON(json: any): CreateDestinationConnector {
    return CreateDestinationConnectorToJSONTyped(json, false);
}

export function CreateDestinationConnectorToJSONTyped(value?: CreateDestinationConnector | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': DestinationConnectorTypeToJSON(value['type']),
        'config': value['config'],
    };
}

