/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Configuration for Google Drive (Service Account) connector
 * @export
 * @interface GOOGLEDRIVEConfig
 */
export interface GOOGLEDRIVEConfig {
    /**
     * File Extensions
     * @type {Array<string>}
     * @memberof GOOGLEDRIVEConfig
     */
    fileExtensions: GOOGLEDRIVEConfigFileExtensionsEnum;
    /**
     * Restrict ingest to these folder URLs (optional). Example: Enter Folder URLs. Example: https://drive.google.com/drive/folders/1234aBCd5678_eFgH9012iJKL3456opqr
     * @type {string}
     * @memberof GOOGLEDRIVEConfig
     */
    rootParents?: string;
    /**
     * Polling Interval (seconds). Example: Enter polling interval in seconds
     * @type {number}
     * @memberof GOOGLEDRIVEConfig
     */
    idleTime?: number;
}


/**
 * @export
 */
export const GOOGLEDRIVEConfigFileExtensionsEnum = {
    Pdf: 'pdf',
    Docdocxgdocodtrtfepub: 'doc,docx,gdoc,odt,rtf,epub',
    Pptpptxgslides: 'ppt,pptx,gslides',
    Xlsxlsxgsheetsods: 'xls,xlsx,gsheets,ods',
    Emlmsg: 'eml,msg',
    Txt: 'txt',
    Htmlhtm: 'html,htm',
    Md: 'md',
    Json: 'json',
    Csv: 'csv',
    Jpgjpegpngwebpsvggif: 'jpg,jpeg,png,webp,svg,gif'
} as const;
export type GOOGLEDRIVEConfigFileExtensionsEnum = typeof GOOGLEDRIVEConfigFileExtensionsEnum[keyof typeof GOOGLEDRIVEConfigFileExtensionsEnum];


/**
 * Check if a given object implements the GOOGLEDRIVEConfig interface.
 */
export function instanceOfGOOGLEDRIVEConfig(value: object): value is GOOGLEDRIVEConfig {
    if (!('fileExtensions' in value) || value['fileExtensions'] === undefined) return false;
    return true;
}

export function GOOGLEDRIVEConfigFromJSON(json: any): GOOGLEDRIVEConfig {
    return GOOGLEDRIVEConfigFromJSONTyped(json, false);
}

export function GOOGLEDRIVEConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): GOOGLEDRIVEConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'fileExtensions': json['file-extensions'],
        'rootParents': json['root-parents'] == null ? undefined : json['root-parents'],
        'idleTime': json['idle-time'] == null ? undefined : json['idle-time'],
    };
}

export function GOOGLEDRIVEConfigToJSON(json: any): GOOGLEDRIVEConfig {
    return GOOGLEDRIVEConfigToJSONTyped(json, false);
}

export function GOOGLEDRIVEConfigToJSONTyped(value?: GOOGLEDRIVEConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'file-extensions': value['fileExtensions'],
        'root-parents': value['rootParents'],
        'idle-time': value['idleTime'],
    };
}

