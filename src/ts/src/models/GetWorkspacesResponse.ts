/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { WorkspaceSchema } from './WorkspaceSchema';
import {
    WorkspaceSchemaFromJSON,
    WorkspaceSchemaFromJSONTyped,
    WorkspaceSchemaToJSON,
    WorkspaceSchemaToJSONTyped,
} from './WorkspaceSchema';

/**
 * 
 * @export
 * @interface GetWorkspacesResponse
 */
export interface GetWorkspacesResponse {
    /**
     * 
     * @type {Array<WorkspaceSchema>}
     * @memberof GetWorkspacesResponse
     */
    workspaces: Array<WorkspaceSchema>;
    /**
     * 
     * @type {string}
     * @memberof GetWorkspacesResponse
     */
    nextToken?: string;
}

/**
 * Check if a given object implements the GetWorkspacesResponse interface.
 */
export function instanceOfGetWorkspacesResponse(value: object): value is GetWorkspacesResponse {
    if (!('workspaces' in value) || value['workspaces'] === undefined) return false;
    return true;
}

export function GetWorkspacesResponseFromJSON(json: any): GetWorkspacesResponse {
    return GetWorkspacesResponseFromJSONTyped(json, false);
}

export function GetWorkspacesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetWorkspacesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'workspaces': ((json['workspaces'] as Array<any>).map(WorkspaceSchemaFromJSON)),
        'nextToken': json['nextToken'] == null ? undefined : json['nextToken'],
    };
}

export function GetWorkspacesResponseToJSON(json: any): GetWorkspacesResponse {
    return GetWorkspacesResponseToJSONTyped(json, false);
}

export function GetWorkspacesResponseToJSONTyped(value?: GetWorkspacesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'workspaces': ((value['workspaces'] as Array<any>).map(WorkspaceSchemaToJSON)),
        'nextToken': value['nextToken'],
    };
}

