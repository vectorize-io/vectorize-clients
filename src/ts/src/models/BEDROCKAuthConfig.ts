/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Authentication configuration for Amazon Bedrock
 * @export
 * @interface BEDROCKAuthConfig
 */
export interface BEDROCKAuthConfig {
    /**
     * Name. Example: Enter a descriptive name for your Amazon Bedrock integration
     * @type {string}
     * @memberof BEDROCKAuthConfig
     */
    name: string;
    /**
     * Access Key. Example: Enter your Amazon Bedrock Access Key
     * @type {string}
     * @memberof BEDROCKAuthConfig
     */
    accessKey: string;
    /**
     * Secret Key. Example: Enter your Amazon Bedrock Secret Key
     * @type {string}
     * @memberof BEDROCKAuthConfig
     */
    key: string;
    /**
     * Region. Example: Region Name
     * @type {string}
     * @memberof BEDROCKAuthConfig
     */
    region: string;
}

/**
 * Check if a given object implements the BEDROCKAuthConfig interface.
 */
export function instanceOfBEDROCKAuthConfig(value: object): value is BEDROCKAuthConfig {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('accessKey' in value) || value['accessKey'] === undefined) return false;
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('region' in value) || value['region'] === undefined) return false;
    return true;
}

export function BEDROCKAuthConfigFromJSON(json: any): BEDROCKAuthConfig {
    return BEDROCKAuthConfigFromJSONTyped(json, false);
}

export function BEDROCKAuthConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): BEDROCKAuthConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'accessKey': json['access-key'],
        'key': json['key'],
        'region': json['region'],
    };
}

export function BEDROCKAuthConfigToJSON(json: any): BEDROCKAuthConfig {
    return BEDROCKAuthConfigToJSONTyped(json, false);
}

export function BEDROCKAuthConfigToJSONTyped(value?: BEDROCKAuthConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'access-key': value['accessKey'],
        'key': value['key'],
        'region': value['region'],
    };
}

