/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SourceConnector
 */
export interface SourceConnector {
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    name: string;
    /**
     * 
     * @type {{ [key: string]: any | null; }}
     * @memberof SourceConnector
     */
    configDoc?: { [key: string]: any | null; };
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    createdAt?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    createdById?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    lastUpdatedById?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    createdByEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    lastUpdatedByEmail?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    errorMessage?: string;
    /**
     * 
     * @type {string}
     * @memberof SourceConnector
     */
    verificationStatus?: string;
}

/**
 * Check if a given object implements the SourceConnector interface.
 */
export function instanceOfSourceConnector(value: object): value is SourceConnector {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function SourceConnectorFromJSON(json: any): SourceConnector {
    return SourceConnectorFromJSONTyped(json, false);
}

export function SourceConnectorFromJSONTyped(json: any, ignoreDiscriminator: boolean): SourceConnector {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'name': json['name'],
        'configDoc': json['configDoc'] == null ? undefined : json['configDoc'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'createdById': json['createdById'] == null ? undefined : json['createdById'],
        'lastUpdatedById': json['lastUpdatedById'] == null ? undefined : json['lastUpdatedById'],
        'createdByEmail': json['createdByEmail'] == null ? undefined : json['createdByEmail'],
        'lastUpdatedByEmail': json['lastUpdatedByEmail'] == null ? undefined : json['lastUpdatedByEmail'],
        'errorMessage': json['errorMessage'] == null ? undefined : json['errorMessage'],
        'verificationStatus': json['verificationStatus'] == null ? undefined : json['verificationStatus'],
    };
}

export function SourceConnectorToJSON(json: any): SourceConnector {
    return SourceConnectorToJSONTyped(json, false);
}

export function SourceConnectorToJSONTyped(value?: SourceConnector | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'name': value['name'],
        'configDoc': value['configDoc'],
        'createdAt': value['createdAt'],
        'createdById': value['createdById'],
        'lastUpdatedById': value['lastUpdatedById'],
        'createdByEmail': value['createdByEmail'],
        'lastUpdatedByEmail': value['lastUpdatedByEmail'],
        'errorMessage': value['errorMessage'],
        'verificationStatus': value['verificationStatus'],
    };
}

