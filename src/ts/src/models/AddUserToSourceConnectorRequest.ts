/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API (Beta)
 * API for Vectorize services
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddUserToSourceConnectorRequestSelectedFilesValue } from './AddUserToSourceConnectorRequestSelectedFilesValue';
import {
    AddUserToSourceConnectorRequestSelectedFilesValueFromJSON,
    AddUserToSourceConnectorRequestSelectedFilesValueFromJSONTyped,
    AddUserToSourceConnectorRequestSelectedFilesValueToJSON,
    AddUserToSourceConnectorRequestSelectedFilesValueToJSONTyped,
} from './AddUserToSourceConnectorRequestSelectedFilesValue';

/**
 * 
 * @export
 * @interface AddUserToSourceConnectorRequest
 */
export interface AddUserToSourceConnectorRequest {
    /**
     * 
     * @type {string}
     * @memberof AddUserToSourceConnectorRequest
     */
    userId: string;
    /**
     * 
     * @type {{ [key: string]: AddUserToSourceConnectorRequestSelectedFilesValue; }}
     * @memberof AddUserToSourceConnectorRequest
     */
    selectedFiles: { [key: string]: AddUserToSourceConnectorRequestSelectedFilesValue; };
    /**
     * 
     * @type {string}
     * @memberof AddUserToSourceConnectorRequest
     */
    refreshToken: string;
}

/**
 * Check if a given object implements the AddUserToSourceConnectorRequest interface.
 */
export function instanceOfAddUserToSourceConnectorRequest(value: object): value is AddUserToSourceConnectorRequest {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('selectedFiles' in value) || value['selectedFiles'] === undefined) return false;
    if (!('refreshToken' in value) || value['refreshToken'] === undefined) return false;
    return true;
}

export function AddUserToSourceConnectorRequestFromJSON(json: any): AddUserToSourceConnectorRequest {
    return AddUserToSourceConnectorRequestFromJSONTyped(json, false);
}

export function AddUserToSourceConnectorRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddUserToSourceConnectorRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['userId'],
        'selectedFiles': (mapValues(json['selectedFiles'], AddUserToSourceConnectorRequestSelectedFilesValueFromJSON)),
        'refreshToken': json['refreshToken'],
    };
}

export function AddUserToSourceConnectorRequestToJSON(json: any): AddUserToSourceConnectorRequest {
    return AddUserToSourceConnectorRequestToJSONTyped(json, false);
}

export function AddUserToSourceConnectorRequestToJSONTyped(value?: AddUserToSourceConnectorRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'userId': value['userId'],
        'selectedFiles': (mapValues(value['selectedFiles'], AddUserToSourceConnectorRequestSelectedFilesValueToJSON)),
        'refreshToken': value['refreshToken'],
    };
}

