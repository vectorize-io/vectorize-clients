/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AZUREAISEARCHConfig } from './AZUREAISEARCHConfig';
import {
    AZUREAISEARCHConfigFromJSON,
    AZUREAISEARCHConfigFromJSONTyped,
    AZUREAISEARCHConfigToJSON,
    AZUREAISEARCHConfigToJSONTyped,
} from './AZUREAISEARCHConfig';

/**
 * 
 * @export
 * @interface Azureaisearch
 */
export interface Azureaisearch {
    /**
     * Name of the connector
     * @type {string}
     * @memberof Azureaisearch
     */
    name: string;
    /**
     * Connector type (must be "AZUREAISEARCH")
     * @type {string}
     * @memberof Azureaisearch
     */
    type: AzureaisearchTypeEnum;
    /**
     * 
     * @type {AZUREAISEARCHConfig}
     * @memberof Azureaisearch
     */
    config: AZUREAISEARCHConfig;
}


/**
 * @export
 */
export const AzureaisearchTypeEnum = {
    Azureaisearch: 'AZUREAISEARCH'
} as const;
export type AzureaisearchTypeEnum = typeof AzureaisearchTypeEnum[keyof typeof AzureaisearchTypeEnum];


/**
 * Check if a given object implements the Azureaisearch interface.
 */
export function instanceOfAzureaisearch(value: object): value is Azureaisearch {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    return true;
}

export function AzureaisearchFromJSON(json: any): Azureaisearch {
    return AzureaisearchFromJSONTyped(json, false);
}

export function AzureaisearchFromJSONTyped(json: any, ignoreDiscriminator: boolean): Azureaisearch {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'config': AZUREAISEARCHConfigFromJSON(json['config']),
    };
}

export function AzureaisearchToJSON(json: any): Azureaisearch {
    return AzureaisearchToJSONTyped(json, false);
}

export function AzureaisearchToJSONTyped(value?: Azureaisearch | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'config': AZUREAISEARCHConfigToJSON(value['config']),
    };
}

