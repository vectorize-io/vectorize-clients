/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Configuration for Confluence connector
 * @export
 * @interface CONFLUENCEConfig
 */
export interface CONFLUENCEConfig {
    /**
     * Spaces. Example: Spaces to include (name, key or id)
     * @type {Array<string>}
     * @memberof CONFLUENCEConfig
     */
    spaces: Array<string>;
    /**
     * Root Parents. Example: Enter root parent pages
     * @type {Array<string>}
     * @memberof CONFLUENCEConfig
     */
    rootParents?: Array<string>;
}

/**
 * Check if a given object implements the CONFLUENCEConfig interface.
 */
export function instanceOfCONFLUENCEConfig(value: object): value is CONFLUENCEConfig {
    if (!('spaces' in value) || value['spaces'] === undefined) return false;
    return true;
}

export function CONFLUENCEConfigFromJSON(json: any): CONFLUENCEConfig {
    return CONFLUENCEConfigFromJSONTyped(json, false);
}

export function CONFLUENCEConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): CONFLUENCEConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'spaces': json['spaces'],
        'rootParents': json['root-parents'] == null ? undefined : json['root-parents'],
    };
}

export function CONFLUENCEConfigToJSON(json: any): CONFLUENCEConfig {
    return CONFLUENCEConfigToJSONTyped(json, false);
}

export function CONFLUENCEConfigToJSONTyped(value?: CONFLUENCEConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'spaces': value['spaces'],
        'root-parents': value['rootParents'],
    };
}

