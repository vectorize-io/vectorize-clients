/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API (Beta)
 * API documentation for Vectorize services
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SourceConnector } from './SourceConnector';
import {
    SourceConnectorFromJSON,
    SourceConnectorFromJSONTyped,
    SourceConnectorToJSON,
    SourceConnectorToJSONTyped,
} from './SourceConnector';
import type { DestinationConnector } from './DestinationConnector';
import {
    DestinationConnectorFromJSON,
    DestinationConnectorFromJSONTyped,
    DestinationConnectorToJSON,
    DestinationConnectorToJSONTyped,
} from './DestinationConnector';
import type { AIPlatform } from './AIPlatform';
import {
    AIPlatformFromJSON,
    AIPlatformFromJSONTyped,
    AIPlatformToJSON,
    AIPlatformToJSONTyped,
} from './AIPlatform';

/**
 * 
 * @export
 * @interface PipelineSummary
 */
export interface PipelineSummary {
    /**
     * 
     * @type {string}
     * @memberof PipelineSummary
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof PipelineSummary
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof PipelineSummary
     */
    documentCount: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof PipelineSummary
     */
    sourceConnectorAuthIds: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PipelineSummary
     */
    destinationConnectorAuthIds: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PipelineSummary
     */
    aiPlatformAuthIds: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PipelineSummary
     */
    sourceConnectorTypes: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PipelineSummary
     */
    destinationConnectorTypes: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PipelineSummary
     */
    aiPlatformTypes: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof PipelineSummary
     */
    createdAt: string | null;
    /**
     * 
     * @type {string}
     * @memberof PipelineSummary
     */
    createdBy: string;
    /**
     * 
     * @type {string}
     * @memberof PipelineSummary
     */
    status?: string;
    /**
     * 
     * @type {{ [key: string]: any | null; }}
     * @memberof PipelineSummary
     */
    configDoc?: { [key: string]: any | null; };
    /**
     * 
     * @type {Array<SourceConnector>}
     * @memberof PipelineSummary
     */
    sourceConnectors: Array<SourceConnector>;
    /**
     * 
     * @type {Array<DestinationConnector>}
     * @memberof PipelineSummary
     */
    destinationConnectors: Array<DestinationConnector>;
    /**
     * 
     * @type {Array<AIPlatform>}
     * @memberof PipelineSummary
     */
    aiPlatforms: Array<AIPlatform>;
}

/**
 * Check if a given object implements the PipelineSummary interface.
 */
export function instanceOfPipelineSummary(value: object): value is PipelineSummary {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('documentCount' in value) || value['documentCount'] === undefined) return false;
    if (!('sourceConnectorAuthIds' in value) || value['sourceConnectorAuthIds'] === undefined) return false;
    if (!('destinationConnectorAuthIds' in value) || value['destinationConnectorAuthIds'] === undefined) return false;
    if (!('aiPlatformAuthIds' in value) || value['aiPlatformAuthIds'] === undefined) return false;
    if (!('sourceConnectorTypes' in value) || value['sourceConnectorTypes'] === undefined) return false;
    if (!('destinationConnectorTypes' in value) || value['destinationConnectorTypes'] === undefined) return false;
    if (!('aiPlatformTypes' in value) || value['aiPlatformTypes'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('createdBy' in value) || value['createdBy'] === undefined) return false;
    if (!('sourceConnectors' in value) || value['sourceConnectors'] === undefined) return false;
    if (!('destinationConnectors' in value) || value['destinationConnectors'] === undefined) return false;
    if (!('aiPlatforms' in value) || value['aiPlatforms'] === undefined) return false;
    return true;
}

export function PipelineSummaryFromJSON(json: any): PipelineSummary {
    return PipelineSummaryFromJSONTyped(json, false);
}

export function PipelineSummaryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PipelineSummary {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'documentCount': json['documentCount'],
        'sourceConnectorAuthIds': json['sourceConnectorAuthIds'],
        'destinationConnectorAuthIds': json['destinationConnectorAuthIds'],
        'aiPlatformAuthIds': json['aiPlatformAuthIds'],
        'sourceConnectorTypes': json['sourceConnectorTypes'],
        'destinationConnectorTypes': json['destinationConnectorTypes'],
        'aiPlatformTypes': json['aiPlatformTypes'],
        'createdAt': json['createdAt'],
        'createdBy': json['createdBy'],
        'status': json['status'] == null ? undefined : json['status'],
        'configDoc': json['configDoc'] == null ? undefined : json['configDoc'],
        'sourceConnectors': ((json['sourceConnectors'] as Array<any>).map(SourceConnectorFromJSON)),
        'destinationConnectors': ((json['destinationConnectors'] as Array<any>).map(DestinationConnectorFromJSON)),
        'aiPlatforms': ((json['aiPlatforms'] as Array<any>).map(AIPlatformFromJSON)),
    };
}

export function PipelineSummaryToJSON(json: any): PipelineSummary {
    return PipelineSummaryToJSONTyped(json, false);
}

export function PipelineSummaryToJSONTyped(value?: PipelineSummary | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'documentCount': value['documentCount'],
        'sourceConnectorAuthIds': value['sourceConnectorAuthIds'],
        'destinationConnectorAuthIds': value['destinationConnectorAuthIds'],
        'aiPlatformAuthIds': value['aiPlatformAuthIds'],
        'sourceConnectorTypes': value['sourceConnectorTypes'],
        'destinationConnectorTypes': value['destinationConnectorTypes'],
        'aiPlatformTypes': value['aiPlatformTypes'],
        'createdAt': value['createdAt'],
        'createdBy': value['createdBy'],
        'status': value['status'],
        'configDoc': value['configDoc'],
        'sourceConnectors': ((value['sourceConnectors'] as Array<any>).map(SourceConnectorToJSON)),
        'destinationConnectors': ((value['destinationConnectors'] as Array<any>).map(DestinationConnectorToJSON)),
        'aiPlatforms': ((value['aiPlatforms'] as Array<any>).map(AIPlatformToJSON)),
    };
}

