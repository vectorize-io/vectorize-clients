/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Configuration for Zoom connector
 * @export
 * @interface ZOOMConfig
 */
export interface ZOOMConfig {
    /**
     * Start Date. Include meetings from this date forward. Example: Enter a date: Example 2023-12-31
     * @type {Date}
     * @memberof ZOOMConfig
     */
    startDate: Date;
    /**
     * End Date. Include meetings up to this date only. Example: Enter a date: Example 2023-12-31
     * @type {Date}
     * @memberof ZOOMConfig
     */
    endDate?: Date;
    /**
     * Title Filter. Only include meetings containing any of these keywords in the title. Example: Enter meeting title keywords
     * @type {Array<string>}
     * @memberof ZOOMConfig
     */
    titleFilter?: Array<string>;
    /**
     * Maximum Meetings. Leave blank for no limit, or specify a maximum number. Example: Enter maximum number of meetings to retrieve (leave blank for no limit)
     * @type {number}
     * @memberof ZOOMConfig
     */
    maxMeetings?: number;
}

/**
 * Check if a given object implements the ZOOMConfig interface.
 */
export function instanceOfZOOMConfig(value: object): value is ZOOMConfig {
    if (!('startDate' in value) || value['startDate'] === undefined) return false;
    return true;
}

export function ZOOMConfigFromJSON(json: any): ZOOMConfig {
    return ZOOMConfigFromJSONTyped(json, false);
}

export function ZOOMConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): ZOOMConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'startDate': (new Date(json['start-date'])),
        'endDate': json['end-date'] == null ? undefined : (new Date(json['end-date'])),
        'titleFilter': json['title-filter'] == null ? undefined : json['title-filter'],
        'maxMeetings': json['max-meetings'] == null ? undefined : json['max-meetings'],
    };
}

export function ZOOMConfigToJSON(json: any): ZOOMConfig {
    return ZOOMConfigToJSONTyped(json, false);
}

export function ZOOMConfigToJSONTyped(value?: ZOOMConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'start-date': ((value['startDate']).toISOString().substring(0,10)),
        'end-date': value['endDate'] == null ? undefined : ((value['endDate']).toISOString().substring(0,10)),
        'title-filter': value['titleFilter'],
        'max-meetings': value['maxMeetings'],
    };
}

