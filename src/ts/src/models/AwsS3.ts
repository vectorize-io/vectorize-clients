/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AWSS3Config } from './AWSS3Config';
import {
    AWSS3ConfigFromJSON,
    AWSS3ConfigFromJSONTyped,
    AWSS3ConfigToJSON,
    AWSS3ConfigToJSONTyped,
} from './AWSS3Config';

/**
 * 
 * @export
 * @interface AwsS3
 */
export interface AwsS3 {
    /**
     * Name of the connector
     * @type {string}
     * @memberof AwsS3
     */
    name: string;
    /**
     * Connector type (must be "AWS_S3")
     * @type {string}
     * @memberof AwsS3
     */
    type: AwsS3TypeEnum;
    /**
     * 
     * @type {AWSS3Config}
     * @memberof AwsS3
     */
    config: AWSS3Config;
}


/**
 * @export
 */
export const AwsS3TypeEnum = {
    AwsS3: 'AWS_S3'
} as const;
export type AwsS3TypeEnum = typeof AwsS3TypeEnum[keyof typeof AwsS3TypeEnum];


/**
 * Check if a given object implements the AwsS3 interface.
 */
export function instanceOfAwsS3(value: object): value is AwsS3 {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    return true;
}

export function AwsS3FromJSON(json: any): AwsS3 {
    return AwsS3FromJSONTyped(json, false);
}

export function AwsS3FromJSONTyped(json: any, ignoreDiscriminator: boolean): AwsS3 {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'config': AWSS3ConfigFromJSON(json['config']),
    };
}

export function AwsS3ToJSON(json: any): AwsS3 {
    return AwsS3ToJSONTyped(json, false);
}

export function AwsS3ToJSONTyped(value?: AwsS3 | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'type': value['type'],
        'config': AWSS3ConfigToJSON(value['config']),
    };
}

