/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AwsS3 } from './AwsS3';
import {
    instanceOfAwsS3,
    AwsS3FromJSON,
    AwsS3FromJSONTyped,
    AwsS3ToJSON,
} from './AwsS3';
import type { AzureBlob } from './AzureBlob';
import {
    instanceOfAzureBlob,
    AzureBlobFromJSON,
    AzureBlobFromJSONTyped,
    AzureBlobToJSON,
} from './AzureBlob';
import type { Confluence } from './Confluence';
import {
    instanceOfConfluence,
    ConfluenceFromJSON,
    ConfluenceFromJSONTyped,
    ConfluenceToJSON,
} from './Confluence';
import type { Discord } from './Discord';
import {
    instanceOfDiscord,
    DiscordFromJSON,
    DiscordFromJSONTyped,
    DiscordToJSON,
} from './Discord';
import type { FileUpload } from './FileUpload';
import {
    instanceOfFileUpload,
    FileUploadFromJSON,
    FileUploadFromJSONTyped,
    FileUploadToJSON,
} from './FileUpload';
import type { Firecrawl } from './Firecrawl';
import {
    instanceOfFirecrawl,
    FirecrawlFromJSON,
    FirecrawlFromJSONTyped,
    FirecrawlToJSON,
} from './Firecrawl';
import type { Fireflies } from './Fireflies';
import {
    instanceOfFireflies,
    FirefliesFromJSON,
    FirefliesFromJSONTyped,
    FirefliesToJSON,
} from './Fireflies';
import type { Gcs } from './Gcs';
import {
    instanceOfGcs,
    GcsFromJSON,
    GcsFromJSONTyped,
    GcsToJSON,
} from './Gcs';
import type { Github } from './Github';
import {
    instanceOfGithub,
    GithubFromJSON,
    GithubFromJSONTyped,
    GithubToJSON,
} from './Github';
import type { GoogleDrive } from './GoogleDrive';
import {
    instanceOfGoogleDrive,
    GoogleDriveFromJSON,
    GoogleDriveFromJSONTyped,
    GoogleDriveToJSON,
} from './GoogleDrive';
import type { OneDrive } from './OneDrive';
import {
    instanceOfOneDrive,
    OneDriveFromJSON,
    OneDriveFromJSONTyped,
    OneDriveToJSON,
} from './OneDrive';
import type { Sharepoint } from './Sharepoint';
import {
    instanceOfSharepoint,
    SharepointFromJSON,
    SharepointFromJSONTyped,
    SharepointToJSON,
} from './Sharepoint';
import type { WebCrawler } from './WebCrawler';
import {
    instanceOfWebCrawler,
    WebCrawlerFromJSON,
    WebCrawlerFromJSONTyped,
    WebCrawlerToJSON,
} from './WebCrawler';
import type { Zoom } from './Zoom';
import {
    instanceOfZoom,
    ZoomFromJSON,
    ZoomFromJSONTyped,
    ZoomToJSON,
} from './Zoom';
import type { ZoomAdmin } from './ZoomAdmin';
import {
    instanceOfZoomAdmin,
    ZoomAdminFromJSON,
    ZoomAdminFromJSONTyped,
    ZoomAdminToJSON,
} from './ZoomAdmin';

/**
 * @type CreateSourceConnectorRequest
 * 
 * @export
 */
export type CreateSourceConnectorRequest = AwsS3 | AzureBlob | Confluence | Discord | FileUpload | Firecrawl | Fireflies | Gcs | Github | GoogleDrive | OneDrive | Sharepoint | WebCrawler | Zoom | ZoomAdmin;

export function CreateSourceConnectorRequestFromJSON(json: any): CreateSourceConnectorRequest {
    return CreateSourceConnectorRequestFromJSONTyped(json, false);
}

export function CreateSourceConnectorRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateSourceConnectorRequest {
    if (json == null) {
        return json;
    }
    switch (json['type']) {
        default:
            return json;
    }
}

export function CreateSourceConnectorRequestToJSON(json: any): any {
    return CreateSourceConnectorRequestToJSONTyped(json, false);
}

export function CreateSourceConnectorRequestToJSONTyped(value?: CreateSourceConnectorRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    switch (value['type']) {
        default:
            return value;
    }
}

