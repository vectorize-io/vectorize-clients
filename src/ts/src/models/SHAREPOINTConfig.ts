/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Configuration for SharePoint connector
 * @export
 * @interface SHAREPOINTConfig
 */
export interface SHAREPOINTConfig {
    /**
     * File Extensions
     * @type {Array<string>}
     * @memberof SHAREPOINTConfig
     */
    fileExtensions: SHAREPOINTConfigFileExtensionsEnum;
    /**
     * Site Name(s). Example: Filter by site name. All sites if empty.
     * @type {string}
     * @memberof SHAREPOINTConfig
     */
    sites?: string;
    /**
     * Read starting from this folder (optional). Example: Enter Folder path: /exampleFolder/subFolder
     * @type {string}
     * @memberof SHAREPOINTConfig
     */
    folderPath?: string;
}


/**
 * @export
 */
export const SHAREPOINTConfigFileExtensionsEnum = {
    Pdf: 'pdf',
    Docdocxgdocodtrtfepub: 'doc,docx,gdoc,odt,rtf,epub',
    Pptpptxgslides: 'ppt,pptx,gslides',
    Xlsxlsxgsheetsods: 'xls,xlsx,gsheets,ods',
    Emlmsg: 'eml,msg',
    Txt: 'txt',
    Htmlhtm: 'html,htm',
    Json: 'json',
    Csv: 'csv',
    Jpgjpegpngwebpsvggif: 'jpg,jpeg,png,webp,svg,gif'
} as const;
export type SHAREPOINTConfigFileExtensionsEnum = typeof SHAREPOINTConfigFileExtensionsEnum[keyof typeof SHAREPOINTConfigFileExtensionsEnum];


/**
 * Check if a given object implements the SHAREPOINTConfig interface.
 */
export function instanceOfSHAREPOINTConfig(value: object): value is SHAREPOINTConfig {
    if (!('fileExtensions' in value) || value['fileExtensions'] === undefined) return false;
    return true;
}

export function SHAREPOINTConfigFromJSON(json: any): SHAREPOINTConfig {
    return SHAREPOINTConfigFromJSONTyped(json, false);
}

export function SHAREPOINTConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SHAREPOINTConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'fileExtensions': json['file-extensions'],
        'sites': json['sites'] == null ? undefined : json['sites'],
        'folderPath': json['folder-path'] == null ? undefined : json['folder-path'],
    };
}

export function SHAREPOINTConfigToJSON(json: any): SHAREPOINTConfig {
    return SHAREPOINTConfigToJSONTyped(json, false);
}

export function SHAREPOINTConfigToJSONTyped(value?: SHAREPOINTConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'file-extensions': value['fileExtensions'],
        'sites': value['sites'],
        'folder-path': value['folderPath'],
    };
}

