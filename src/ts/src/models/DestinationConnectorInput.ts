/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DestinationConnectorInputConfig } from './DestinationConnectorInputConfig';
import {
    DestinationConnectorInputConfigFromJSON,
    DestinationConnectorInputConfigFromJSONTyped,
    DestinationConnectorInputConfigToJSON,
    DestinationConnectorInputConfigToJSONTyped,
} from './DestinationConnectorInputConfig';

/**
 * Destination connector configuration
 * @export
 * @interface DestinationConnectorInput
 */
export interface DestinationConnectorInput {
    /**
     * Unique identifier for the destination connector
     * @type {string}
     * @memberof DestinationConnectorInput
     */
    id: string;
    /**
     * Type of destination connector
     * @type {string}
     * @memberof DestinationConnectorInput
     */
    type: DestinationConnectorInputTypeEnum;
    /**
     * 
     * @type {DestinationConnectorInputConfig}
     * @memberof DestinationConnectorInput
     */
    config: DestinationConnectorInputConfig;
}


/**
 * @export
 */
export const DestinationConnectorInputTypeEnum = {
    Capella: 'CAPELLA',
    Datastax: 'DATASTAX',
    Elastic: 'ELASTIC',
    Pinecone: 'PINECONE',
    Azureaisearch: 'AZUREAISEARCH',
    Milvus: 'MILVUS',
    Neo4J: 'NEO4J',
    Postgresql: 'POSTGRESQL',
    Qdrant: 'QDRANT',
    Singlestore: 'SINGLESTORE',
    Supabase: 'SUPABASE',
    Turbopuffer: 'TURBOPUFFER',
    Weaviate: 'WEAVIATE'
} as const;
export type DestinationConnectorInputTypeEnum = typeof DestinationConnectorInputTypeEnum[keyof typeof DestinationConnectorInputTypeEnum];


/**
 * Check if a given object implements the DestinationConnectorInput interface.
 */
export function instanceOfDestinationConnectorInput(value: object): value is DestinationConnectorInput {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    return true;
}

export function DestinationConnectorInputFromJSON(json: any): DestinationConnectorInput {
    return DestinationConnectorInputFromJSONTyped(json, false);
}

export function DestinationConnectorInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): DestinationConnectorInput {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': json['type'],
        'config': DestinationConnectorInputConfigFromJSON(json['config']),
    };
}

export function DestinationConnectorInputToJSON(json: any): DestinationConnectorInput {
    return DestinationConnectorInputToJSONTyped(json, false);
}

export function DestinationConnectorInputToJSONTyped(value?: DestinationConnectorInput | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'config': DestinationConnectorInputConfigToJSON(value['config']),
    };
}

