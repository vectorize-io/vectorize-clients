/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Authentication configuration for Supabase
 * @export
 * @interface SUPABASEAuthConfig
 */
export interface SUPABASEAuthConfig {
    /**
     * Name. Example: Enter a descriptive name for your Supabase integration
     * @type {string}
     * @memberof SUPABASEAuthConfig
     */
    name: string;
    /**
     * Host. Example: Enter the host of the deployment
     * @type {string}
     * @memberof SUPABASEAuthConfig
     */
    host: string;
    /**
     * Port. Example: Enter the port of the deployment
     * @type {number}
     * @memberof SUPABASEAuthConfig
     */
    port?: number;
    /**
     * Database. Example: Enter the database name
     * @type {string}
     * @memberof SUPABASEAuthConfig
     */
    database: string;
    /**
     * Username. Example: Enter the username
     * @type {string}
     * @memberof SUPABASEAuthConfig
     */
    username: string;
    /**
     * Password. Example: Enter the username's password
     * @type {string}
     * @memberof SUPABASEAuthConfig
     */
    password: string;
}

/**
 * Check if a given object implements the SUPABASEAuthConfig interface.
 */
export function instanceOfSUPABASEAuthConfig(value: object): value is SUPABASEAuthConfig {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('host' in value) || value['host'] === undefined) return false;
    if (!('database' in value) || value['database'] === undefined) return false;
    if (!('username' in value) || value['username'] === undefined) return false;
    if (!('password' in value) || value['password'] === undefined) return false;
    return true;
}

export function SUPABASEAuthConfigFromJSON(json: any): SUPABASEAuthConfig {
    return SUPABASEAuthConfigFromJSONTyped(json, false);
}

export function SUPABASEAuthConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): SUPABASEAuthConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'host': json['host'],
        'port': json['port'] == null ? undefined : json['port'],
        'database': json['database'],
        'username': json['username'],
        'password': json['password'],
    };
}

export function SUPABASEAuthConfigToJSON(json: any): SUPABASEAuthConfig {
    return SUPABASEAuthConfigToJSONTyped(json, false);
}

export function SUPABASEAuthConfigToJSONTyped(value?: SUPABASEAuthConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'host': value['host'],
        'port': value['port'],
        'database': value['database'],
        'username': value['username'],
        'password': value['password'],
    };
}

