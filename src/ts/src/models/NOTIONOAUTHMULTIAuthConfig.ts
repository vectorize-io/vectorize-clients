/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Authentication configuration for Notion Multi-User (Vectorize)
 * @export
 * @interface NOTIONOAUTHMULTIAuthConfig
 */
export interface NOTIONOAUTHMULTIAuthConfig {
    /**
     * Name. Example: Enter a descriptive name
     * @type {string}
     * @memberof NOTIONOAUTHMULTIAuthConfig
     */
    name: string;
    /**
     * Authorized Users. Users who have authorized access to their Notion content
     * @type {string}
     * @memberof NOTIONOAUTHMULTIAuthConfig
     */
    authorizedUsers?: string;
    /**
     * 
     * @type {object}
     * @memberof NOTIONOAUTHMULTIAuthConfig
     */
    editedUsers?: object;
    /**
     * 
     * @type {object}
     * @memberof NOTIONOAUTHMULTIAuthConfig
     */
    deletedUsers?: object;
}

/**
 * Check if a given object implements the NOTIONOAUTHMULTIAuthConfig interface.
 */
export function instanceOfNOTIONOAUTHMULTIAuthConfig(value: object): value is NOTIONOAUTHMULTIAuthConfig {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function NOTIONOAUTHMULTIAuthConfigFromJSON(json: any): NOTIONOAUTHMULTIAuthConfig {
    return NOTIONOAUTHMULTIAuthConfigFromJSONTyped(json, false);
}

export function NOTIONOAUTHMULTIAuthConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): NOTIONOAUTHMULTIAuthConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'authorizedUsers': json['authorized-users'] == null ? undefined : json['authorized-users'],
        'editedUsers': json['editedUsers'] == null ? undefined : json['editedUsers'],
        'deletedUsers': json['deletedUsers'] == null ? undefined : json['deletedUsers'],
    };
}

export function NOTIONOAUTHMULTIAuthConfigToJSON(json: any): NOTIONOAUTHMULTIAuthConfig {
    return NOTIONOAUTHMULTIAuthConfigToJSONTyped(json, false);
}

export function NOTIONOAUTHMULTIAuthConfigToJSONTyped(value?: NOTIONOAUTHMULTIAuthConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'authorized-users': value['authorizedUsers'],
        'editedUsers': value['editedUsers'],
        'deletedUsers': value['deletedUsers'],
    };
}

