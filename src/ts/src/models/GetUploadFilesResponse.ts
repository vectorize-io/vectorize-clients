/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API (Beta)
 * API for Vectorize services
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetUploadFilesResponseFilesInner } from './GetUploadFilesResponseFilesInner';
import {
    GetUploadFilesResponseFilesInnerFromJSON,
    GetUploadFilesResponseFilesInnerFromJSONTyped,
    GetUploadFilesResponseFilesInnerToJSON,
    GetUploadFilesResponseFilesInnerToJSONTyped,
} from './GetUploadFilesResponseFilesInner';

/**
 * 
 * @export
 * @interface GetUploadFilesResponse
 */
export interface GetUploadFilesResponse {
    /**
     * 
     * @type {string}
     * @memberof GetUploadFilesResponse
     */
    message: string;
    /**
     * 
     * @type {Array<GetUploadFilesResponseFilesInner>}
     * @memberof GetUploadFilesResponse
     */
    files: Array<GetUploadFilesResponseFilesInner>;
}

/**
 * Check if a given object implements the GetUploadFilesResponse interface.
 */
export function instanceOfGetUploadFilesResponse(value: object): value is GetUploadFilesResponse {
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('files' in value) || value['files'] === undefined) return false;
    return true;
}

export function GetUploadFilesResponseFromJSON(json: any): GetUploadFilesResponse {
    return GetUploadFilesResponseFromJSONTyped(json, false);
}

export function GetUploadFilesResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUploadFilesResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'files': ((json['files'] as Array<any>).map(GetUploadFilesResponseFilesInnerFromJSON)),
    };
}

export function GetUploadFilesResponseToJSON(json: any): GetUploadFilesResponse {
    return GetUploadFilesResponseToJSONTyped(json, false);
}

export function GetUploadFilesResponseToJSONTyped(value?: GetUploadFilesResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'files': ((value['files'] as Array<any>).map(GetUploadFilesResponseFilesInnerToJSON)),
    };
}

