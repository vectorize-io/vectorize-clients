/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AZUREAISEARCHConfig } from './AZUREAISEARCHConfig';
import {
    instanceOfAZUREAISEARCHConfig,
    AZUREAISEARCHConfigFromJSON,
    AZUREAISEARCHConfigFromJSONTyped,
    AZUREAISEARCHConfigToJSON,
} from './AZUREAISEARCHConfig';
import type { CAPELLAConfig } from './CAPELLAConfig';
import {
    instanceOfCAPELLAConfig,
    CAPELLAConfigFromJSON,
    CAPELLAConfigFromJSONTyped,
    CAPELLAConfigToJSON,
} from './CAPELLAConfig';
import type { DATASTAXConfig } from './DATASTAXConfig';
import {
    instanceOfDATASTAXConfig,
    DATASTAXConfigFromJSON,
    DATASTAXConfigFromJSONTyped,
    DATASTAXConfigToJSON,
} from './DATASTAXConfig';
import type { ELASTICConfig } from './ELASTICConfig';
import {
    instanceOfELASTICConfig,
    ELASTICConfigFromJSON,
    ELASTICConfigFromJSONTyped,
    ELASTICConfigToJSON,
} from './ELASTICConfig';
import type { MILVUSConfig } from './MILVUSConfig';
import {
    instanceOfMILVUSConfig,
    MILVUSConfigFromJSON,
    MILVUSConfigFromJSONTyped,
    MILVUSConfigToJSON,
} from './MILVUSConfig';
import type { PINECONEConfig } from './PINECONEConfig';
import {
    instanceOfPINECONEConfig,
    PINECONEConfigFromJSON,
    PINECONEConfigFromJSONTyped,
    PINECONEConfigToJSON,
} from './PINECONEConfig';
import type { POSTGRESQLConfig } from './POSTGRESQLConfig';
import {
    instanceOfPOSTGRESQLConfig,
    POSTGRESQLConfigFromJSON,
    POSTGRESQLConfigFromJSONTyped,
    POSTGRESQLConfigToJSON,
} from './POSTGRESQLConfig';
import type { QDRANTConfig } from './QDRANTConfig';
import {
    instanceOfQDRANTConfig,
    QDRANTConfigFromJSON,
    QDRANTConfigFromJSONTyped,
    QDRANTConfigToJSON,
} from './QDRANTConfig';
import type { SINGLESTOREConfig } from './SINGLESTOREConfig';
import {
    instanceOfSINGLESTOREConfig,
    SINGLESTOREConfigFromJSON,
    SINGLESTOREConfigFromJSONTyped,
    SINGLESTOREConfigToJSON,
} from './SINGLESTOREConfig';
import type { SUPABASEConfig } from './SUPABASEConfig';
import {
    instanceOfSUPABASEConfig,
    SUPABASEConfigFromJSON,
    SUPABASEConfigFromJSONTyped,
    SUPABASEConfigToJSON,
} from './SUPABASEConfig';
import type { TURBOPUFFERConfig } from './TURBOPUFFERConfig';
import {
    instanceOfTURBOPUFFERConfig,
    TURBOPUFFERConfigFromJSON,
    TURBOPUFFERConfigFromJSONTyped,
    TURBOPUFFERConfigToJSON,
} from './TURBOPUFFERConfig';
import type { WEAVIATEConfig } from './WEAVIATEConfig';
import {
    instanceOfWEAVIATEConfig,
    WEAVIATEConfigFromJSON,
    WEAVIATEConfigFromJSONTyped,
    WEAVIATEConfigToJSON,
} from './WEAVIATEConfig';

/**
 * @type DestinationConnectorInputConfig
 * Configuration specific to the connector type
 * @export
 */
export type DestinationConnectorInputConfig = AZUREAISEARCHConfig | CAPELLAConfig | DATASTAXConfig | ELASTICConfig | MILVUSConfig | PINECONEConfig | POSTGRESQLConfig | QDRANTConfig | SINGLESTOREConfig | SUPABASEConfig | TURBOPUFFERConfig | WEAVIATEConfig;

export function DestinationConnectorInputConfigFromJSON(json: any): DestinationConnectorInputConfig {
    return DestinationConnectorInputConfigFromJSONTyped(json, false);
}

export function DestinationConnectorInputConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): DestinationConnectorInputConfig {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfAZUREAISEARCHConfig(json)) {
        return AZUREAISEARCHConfigFromJSONTyped(json, true);
    }
    if (instanceOfCAPELLAConfig(json)) {
        return CAPELLAConfigFromJSONTyped(json, true);
    }
    if (instanceOfDATASTAXConfig(json)) {
        return DATASTAXConfigFromJSONTyped(json, true);
    }
    if (instanceOfELASTICConfig(json)) {
        return ELASTICConfigFromJSONTyped(json, true);
    }
    if (instanceOfMILVUSConfig(json)) {
        return MILVUSConfigFromJSONTyped(json, true);
    }
    if (instanceOfPINECONEConfig(json)) {
        return PINECONEConfigFromJSONTyped(json, true);
    }
    if (instanceOfPOSTGRESQLConfig(json)) {
        return POSTGRESQLConfigFromJSONTyped(json, true);
    }
    if (instanceOfQDRANTConfig(json)) {
        return QDRANTConfigFromJSONTyped(json, true);
    }
    if (instanceOfSINGLESTOREConfig(json)) {
        return SINGLESTOREConfigFromJSONTyped(json, true);
    }
    if (instanceOfSUPABASEConfig(json)) {
        return SUPABASEConfigFromJSONTyped(json, true);
    }
    if (instanceOfTURBOPUFFERConfig(json)) {
        return TURBOPUFFERConfigFromJSONTyped(json, true);
    }
    if (instanceOfWEAVIATEConfig(json)) {
        return WEAVIATEConfigFromJSONTyped(json, true);
    }

    return {} as any;
}

export function DestinationConnectorInputConfigToJSON(json: any): any {
    return DestinationConnectorInputConfigToJSONTyped(json, false);
}

export function DestinationConnectorInputConfigToJSONTyped(value?: DestinationConnectorInputConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfAZUREAISEARCHConfig(value)) {
        return AZUREAISEARCHConfigToJSON(value as AZUREAISEARCHConfig);
    }
    if (instanceOfCAPELLAConfig(value)) {
        return CAPELLAConfigToJSON(value as CAPELLAConfig);
    }
    if (instanceOfDATASTAXConfig(value)) {
        return DATASTAXConfigToJSON(value as DATASTAXConfig);
    }
    if (instanceOfELASTICConfig(value)) {
        return ELASTICConfigToJSON(value as ELASTICConfig);
    }
    if (instanceOfMILVUSConfig(value)) {
        return MILVUSConfigToJSON(value as MILVUSConfig);
    }
    if (instanceOfPINECONEConfig(value)) {
        return PINECONEConfigToJSON(value as PINECONEConfig);
    }
    if (instanceOfPOSTGRESQLConfig(value)) {
        return POSTGRESQLConfigToJSON(value as POSTGRESQLConfig);
    }
    if (instanceOfQDRANTConfig(value)) {
        return QDRANTConfigToJSON(value as QDRANTConfig);
    }
    if (instanceOfSINGLESTOREConfig(value)) {
        return SINGLESTOREConfigToJSON(value as SINGLESTOREConfig);
    }
    if (instanceOfSUPABASEConfig(value)) {
        return SUPABASEConfigToJSON(value as SUPABASEConfig);
    }
    if (instanceOfTURBOPUFFERConfig(value)) {
        return TURBOPUFFERConfigToJSON(value as TURBOPUFFERConfig);
    }
    if (instanceOfWEAVIATEConfig(value)) {
        return WEAVIATEConfigToJSON(value as WEAVIATEConfig);
    }

    return {};
}

