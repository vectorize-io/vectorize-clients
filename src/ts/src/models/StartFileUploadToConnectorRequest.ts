/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StartFileUploadToConnectorRequest
 */
export interface StartFileUploadToConnectorRequest {
    /**
     * 
     * @type {string}
     * @memberof StartFileUploadToConnectorRequest
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof StartFileUploadToConnectorRequest
     */
    contentType: string;
    /**
     * 
     * @type {string}
     * @memberof StartFileUploadToConnectorRequest
     */
    metadata?: string;
}

/**
 * Check if a given object implements the StartFileUploadToConnectorRequest interface.
 */
export function instanceOfStartFileUploadToConnectorRequest(value: object): value is StartFileUploadToConnectorRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('contentType' in value) || value['contentType'] === undefined) return false;
    return true;
}

export function StartFileUploadToConnectorRequestFromJSON(json: any): StartFileUploadToConnectorRequest {
    return StartFileUploadToConnectorRequestFromJSONTyped(json, false);
}

export function StartFileUploadToConnectorRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StartFileUploadToConnectorRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'contentType': json['contentType'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
    };
}

export function StartFileUploadToConnectorRequestToJSON(json: any): StartFileUploadToConnectorRequest {
    return StartFileUploadToConnectorRequestToJSONTyped(json, false);
}

export function StartFileUploadToConnectorRequestToJSONTyped(value?: StartFileUploadToConnectorRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'contentType': value['contentType'],
        'metadata': value['metadata'],
    };
}

