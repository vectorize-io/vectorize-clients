/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Authentication configuration for File Upload
 * @export
 * @interface FILEUPLOADAuthConfig
 */
export interface FILEUPLOADAuthConfig {
    /**
     * Name. Example: Enter a descriptive name for this connector
     * @type {string}
     * @memberof FILEUPLOADAuthConfig
     */
    name: string;
    /**
     * Path Prefix
     * @type {string}
     * @memberof FILEUPLOADAuthConfig
     */
    pathPrefix?: string;
    /**
     * Choose files. Files uploaded to this connector can be used in pipelines to vectorize their contents. Note: files with the same name will be overwritten.
     * @type {Array<string>}
     * @memberof FILEUPLOADAuthConfig
     */
    files?: Array<string>;
}

/**
 * Check if a given object implements the FILEUPLOADAuthConfig interface.
 */
export function instanceOfFILEUPLOADAuthConfig(value: object): value is FILEUPLOADAuthConfig {
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function FILEUPLOADAuthConfigFromJSON(json: any): FILEUPLOADAuthConfig {
    return FILEUPLOADAuthConfigFromJSONTyped(json, false);
}

export function FILEUPLOADAuthConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): FILEUPLOADAuthConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'pathPrefix': json['path-prefix'] == null ? undefined : json['path-prefix'],
        'files': json['files'] == null ? undefined : json['files'],
    };
}

export function FILEUPLOADAuthConfigToJSON(json: any): FILEUPLOADAuthConfig {
    return FILEUPLOADAuthConfigToJSONTyped(json, false);
}

export function FILEUPLOADAuthConfigToJSONTyped(value?: FILEUPLOADAuthConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'path-prefix': value['pathPrefix'],
        'files': value['files'],
    };
}

