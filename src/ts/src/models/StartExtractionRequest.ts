/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API (Beta)
 * API for Vectorize services
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StartExtractionRequest
 */
export interface StartExtractionRequest {
    /**
     * 
     * @type {string}
     * @memberof StartExtractionRequest
     */
    fileId: string;
    /**
     * 
     * @type {string}
     * @memberof StartExtractionRequest
     */
    type?: StartExtractionRequestTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof StartExtractionRequest
     */
    chunkingStrategy?: StartExtractionRequestChunkingStrategyEnum;
    /**
     * 
     * @type {number}
     * @memberof StartExtractionRequest
     */
    chunkSize?: number;
}


/**
 * @export
 */
export const StartExtractionRequestTypeEnum = {
    Iris: 'iris'
} as const;
export type StartExtractionRequestTypeEnum = typeof StartExtractionRequestTypeEnum[keyof typeof StartExtractionRequestTypeEnum];

/**
 * @export
 */
export const StartExtractionRequestChunkingStrategyEnum = {
    Markdown: 'markdown'
} as const;
export type StartExtractionRequestChunkingStrategyEnum = typeof StartExtractionRequestChunkingStrategyEnum[keyof typeof StartExtractionRequestChunkingStrategyEnum];


/**
 * Check if a given object implements the StartExtractionRequest interface.
 */
export function instanceOfStartExtractionRequest(value: object): value is StartExtractionRequest {
    if (!('fileId' in value) || value['fileId'] === undefined) return false;
    return true;
}

export function StartExtractionRequestFromJSON(json: any): StartExtractionRequest {
    return StartExtractionRequestFromJSONTyped(json, false);
}

export function StartExtractionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StartExtractionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'fileId': json['fileId'],
        'type': json['type'] == null ? undefined : json['type'],
        'chunkingStrategy': json['chunkingStrategy'] == null ? undefined : json['chunkingStrategy'],
        'chunkSize': json['chunkSize'] == null ? undefined : json['chunkSize'],
    };
}

export function StartExtractionRequestToJSON(json: any): StartExtractionRequest {
    return StartExtractionRequestToJSONTyped(json, false);
}

export function StartExtractionRequestToJSONTyped(value?: StartExtractionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fileId': value['fileId'],
        'type': value['type'],
        'chunkingStrategy': value['chunkingStrategy'],
        'chunkSize': value['chunkSize'],
    };
}

