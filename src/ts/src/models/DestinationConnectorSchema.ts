/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DestinationConnectorTypeForPipeline } from './DestinationConnectorTypeForPipeline';
import {
    DestinationConnectorTypeForPipelineFromJSON,
    DestinationConnectorTypeForPipelineFromJSONTyped,
    DestinationConnectorTypeForPipelineToJSON,
    DestinationConnectorTypeForPipelineToJSONTyped,
} from './DestinationConnectorTypeForPipeline';

/**
 * 
 * @export
 * @interface DestinationConnectorSchema
 */
export interface DestinationConnectorSchema {
    /**
     * 
     * @type {string}
     * @memberof DestinationConnectorSchema
     */
    id: string;
    /**
     * 
     * @type {DestinationConnectorTypeForPipeline}
     * @memberof DestinationConnectorSchema
     */
    type: DestinationConnectorTypeForPipeline;
    /**
     * 
     * @type {{ [key: string]: any | null; }}
     * @memberof DestinationConnectorSchema
     */
    config?: { [key: string]: any | null; };
}



/**
 * Check if a given object implements the DestinationConnectorSchema interface.
 */
export function instanceOfDestinationConnectorSchema(value: object): value is DestinationConnectorSchema {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function DestinationConnectorSchemaFromJSON(json: any): DestinationConnectorSchema {
    return DestinationConnectorSchemaFromJSONTyped(json, false);
}

export function DestinationConnectorSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): DestinationConnectorSchema {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'type': DestinationConnectorTypeForPipelineFromJSON(json['type']),
        'config': json['config'] == null ? undefined : json['config'],
    };
}

export function DestinationConnectorSchemaToJSON(json: any): DestinationConnectorSchema {
    return DestinationConnectorSchemaToJSONTyped(json, false);
}

export function DestinationConnectorSchemaToJSONTyped(value?: DestinationConnectorSchema | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': DestinationConnectorTypeForPipelineToJSON(value['type']),
        'config': value['config'],
    };
}

