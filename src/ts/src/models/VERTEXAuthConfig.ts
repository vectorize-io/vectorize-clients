/* tslint:disable */
/* eslint-disable */
/**
 * Vectorize API
 * API for Vectorize services (Beta)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * Authentication configuration for Google Vertex AI
 * @export
 * @interface VERTEXAuthConfig
 */
export interface VERTEXAuthConfig {
    /**
     * Name. Example: Enter a descriptive name for your Google Vertex AI integration
     * @type {string}
     * @memberof VERTEXAuthConfig
     */
    name: string;
    /**
     * Service Account Json. Example: Enter the contents of your Google Vertex AI Service Account JSON file
     * @type {string}
     * @memberof VERTEXAuthConfig
     */
    key: string;
    /**
     * Region. Example: Region Name, e.g. us-central1
     * @type {string}
     * @memberof VERTEXAuthConfig
     */
    region: string;
}

/**
 * Check if a given object implements the VERTEXAuthConfig interface.
 */
export function instanceOfVERTEXAuthConfig(value: object): value is VERTEXAuthConfig {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('key' in value) || value['key'] === undefined) return false;
    if (!('region' in value) || value['region'] === undefined) return false;
    return true;
}

export function VERTEXAuthConfigFromJSON(json: any): VERTEXAuthConfig {
    return VERTEXAuthConfigFromJSONTyped(json, false);
}

export function VERTEXAuthConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): VERTEXAuthConfig {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'key': json['key'],
        'region': json['region'],
    };
}

export function VERTEXAuthConfigToJSON(json: any): VERTEXAuthConfig {
    return VERTEXAuthConfigToJSONTyped(json, false);
}

export function VERTEXAuthConfigToJSONTyped(value?: VERTEXAuthConfig | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'key': value['key'],
        'region': value['region'],
    };
}

